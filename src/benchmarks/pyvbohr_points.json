{
    "cmd_list": [
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 1",
            "label": "Bohrium/1",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-7140fb28-91ea-48f1-901f-cfca1212f280.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/1'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 1 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-7140fb28-91ea-48f1-901f-cfca1212f280.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-7140fb28-91ea-48f1-901f-cfca1212f280.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 1 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-7140fb28-91ea-48f1-901f-cfca1212f280.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-7140fb28-91ea-48f1-901f-cfca1212f280.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 1 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-7140fb28-91ea-48f1-901f-cfca1212f280.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-7140fb28-91ea-48f1-901f-cfca1212f280.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.23563075065612793 seconds to complete.\nFunction \"centroids_closest\" took 0.0030612945556640625 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.5964539051055908 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 1, elapsed-time: 0.596714\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.004744291305541992 seconds to complete.\nFunction \"centroids_closest\" took 0.002622365951538086 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.10575246810913086 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 1, elapsed-time: 0.106010\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.00474238395690918 seconds to complete.\nFunction \"centroids_closest\" took 0.0025305747985839844 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.09066367149353027 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 1, elapsed-time: 0.090932\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 2",
            "label": "Bohrium/2",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-2e8a4f8a-3ae6-40dd-84cb-f4afc6a451b0.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/2'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 2 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-2e8a4f8a-3ae6-40dd-84cb-f4afc6a451b0.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-2e8a4f8a-3ae6-40dd-84cb-f4afc6a451b0.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 2 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-2e8a4f8a-3ae6-40dd-84cb-f4afc6a451b0.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-2e8a4f8a-3ae6-40dd-84cb-f4afc6a451b0.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 2 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-2e8a4f8a-3ae6-40dd-84cb-f4afc6a451b0.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-2e8a4f8a-3ae6-40dd-84cb-f4afc6a451b0.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.24810099601745605 seconds to complete.\nFunction \"centroids_closest\" took 0.003100872039794922 seconds to complete.\nFunction \"centroids_closest\" took 0.002517223358154297 seconds to complete.\nFunction \"centroids_closest\" took 0.002523183822631836 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.5956058502197266 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 2, elapsed-time: 0.595868\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.0047206878662109375 seconds to complete.\nFunction \"centroids_closest\" took 0.002569437026977539 seconds to complete.\nFunction \"centroids_closest\" took 0.0025048255920410156 seconds to complete.\nFunction \"centroids_closest\" took 0.002501964569091797 seconds to complete.\nFunction \"centroids_closest\" took 0.002552509307861328 seconds to complete.\nFunction \"centroids_closest\" took 0.0025484561920166016 seconds to complete.\nFunction \"centroids_closest\" took 0.0024940967559814453 seconds to complete.\nFunction \"centroids_closest\" took 0.002505779266357422 seconds to complete.\nFunction \"centroids_closest\" took 0.0025408267974853516 seconds to complete.\nFunction \"centroids_closest\" took 0.002515554428100586 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.1341543197631836 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 2, elapsed-time: 0.134423\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.004691123962402344 seconds to complete.\nFunction \"centroids_closest\" took 0.0025141239166259766 seconds to complete.\nFunction \"centroids_closest\" took 0.0025153160095214844 seconds to complete.\nFunction \"centroids_closest\" took 0.0024995803833007812 seconds to complete.\nFunction \"centroids_closest\" took 0.0024988651275634766 seconds to complete.\nFunction \"centroids_closest\" took 0.002504110336303711 seconds to complete.\nFunction \"centroids_closest\" took 0.002507448196411133 seconds to complete.\nFunction \"centroids_closest\" took 0.0025031566619873047 seconds to complete.\nFunction \"centroids_closest\" took 0.002504110336303711 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.12486386299133301 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 2, elapsed-time: 0.125108\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 3",
            "label": "Bohrium/3",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-229c66ec-e164-4799-bf6a-d48a1730b5ec.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/3'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 3 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-229c66ec-e164-4799-bf6a-d48a1730b5ec.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-229c66ec-e164-4799-bf6a-d48a1730b5ec.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 3 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-229c66ec-e164-4799-bf6a-d48a1730b5ec.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-229c66ec-e164-4799-bf6a-d48a1730b5ec.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 3 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-229c66ec-e164-4799-bf6a-d48a1730b5ec.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-229c66ec-e164-4799-bf6a-d48a1730b5ec.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.2327573299407959 seconds to complete.\nFunction \"centroids_closest\" took 0.004725217819213867 seconds to complete.\nFunction \"centroids_closest\" took 0.0025603771209716797 seconds to complete.\nFunction \"centroids_closest\" took 0.002527952194213867 seconds to complete.\nFunction \"centroids_closest\" took 0.0025110244750976562 seconds to complete.\nFunction \"centroids_closest\" took 0.00254058837890625 seconds to complete.\nFunction \"centroids_closest\" took 0.0025243759155273438 seconds to complete.\nFunction \"centroids_closest\" took 0.002521038055419922 seconds to complete.\nFunction \"centroids_closest\" took 0.002529621124267578 seconds to complete.\nFunction \"centroids_closest\" took 0.002523183822631836 seconds to complete.\nFunction \"centroids_closest\" took 0.0025238990783691406 seconds to complete.\nFunction \"centroids_closest\" took 0.0025293827056884766 seconds to complete.\nFunction \"centroids_closest\" took 0.0025260448455810547 seconds to complete.\nFunction \"centroids_closest\" took 0.0025217533111572266 seconds to complete.\nFunction \"centroids_closest\" took 0.002530813217163086 seconds to complete.\nFunction \"centroids_closest\" took 0.0025386810302734375 seconds to complete.\nFunction \"centroids_closest\" took 0.0025250911712646484 seconds to complete.\nFunction \"centroids_closest\" took 0.0025272369384765625 seconds to complete.\nFunction \"centroids_closest\" took 0.002519369125366211 seconds to complete.\nFunction \"centroids_closest\" took 0.0025217533111572266 seconds to complete.\nFunction \"centroids_closest\" took 0.002528667449951172 seconds to complete.\nFunction \"centroids_closest\" took 0.0025544166564941406 seconds to complete.\nFunction \"centroids_closest\" took 0.0025124549865722656 seconds to complete.\nFunction \"centroids_closest\" took 0.002517223358154297 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.8141167163848877 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 3, elapsed-time: 0.814415\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.004733562469482422 seconds to complete.\nFunction \"centroids_closest\" took 0.0037033557891845703 seconds to complete.\nFunction \"centroids_closest\" took 0.00252532958984375 seconds to complete.\nFunction \"centroids_closest\" took 0.0025339126586914062 seconds to complete.\nFunction \"centroids_closest\" took 0.0025298595428466797 seconds to complete.\nFunction \"centroids_closest\" took 0.0025322437286376953 seconds to complete.\nFunction \"centroids_closest\" took 0.0025207996368408203 seconds to complete.\nFunction \"centroids_closest\" took 0.0025246143341064453 seconds to complete.\nFunction \"centroids_closest\" took 0.0025284290313720703 seconds to complete.\nFunction \"centroids_closest\" took 0.002520322799682617 seconds to complete.\nFunction \"centroids_closest\" took 0.0025200843811035156 seconds to complete.\nFunction \"centroids_closest\" took 0.0037889480590820312 seconds to complete.\nFunction \"centroids_closest\" took 0.002521038055419922 seconds to complete.\nFunction \"centroids_closest\" took 0.0025093555450439453 seconds to complete.\nFunction \"centroids_closest\" took 0.002528667449951172 seconds to complete.\nFunction \"centroids_closest\" took 0.002521991729736328 seconds to complete.\nFunction \"centroids_closest\" took 0.002542257308959961 seconds to complete.\nFunction \"centroids_closest\" took 0.002563953399658203 seconds to complete.\nFunction \"centroids_closest\" took 0.0025229454040527344 seconds to complete.\nFunction \"centroids_closest\" took 0.0025243759155273438 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.28883862495422363 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 3, elapsed-time: 0.289091\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.00466465950012207 seconds to complete.\nFunction \"centroids_closest\" took 0.0025272369384765625 seconds to complete.\nFunction \"centroids_closest\" took 0.002504110336303711 seconds to complete.\nFunction \"centroids_closest\" took 0.002629995346069336 seconds to complete.\nFunction \"centroids_closest\" took 0.0025038719177246094 seconds to complete.\nFunction \"centroids_closest\" took 0.002512693405151367 seconds to complete.\nFunction \"centroids_closest\" took 0.0025038719177246094 seconds to complete.\nFunction \"centroids_closest\" took 0.0025060176849365234 seconds to complete.\nFunction \"centroids_closest\" took 0.0025031566619873047 seconds to complete.\nFunction \"centroids_closest\" took 0.0025031566619873047 seconds to complete.\nFunction \"centroids_closest\" took 0.002511262893676758 seconds to complete.\nFunction \"centroids_closest\" took 0.002572298049926758 seconds to complete.\nFunction \"centroids_closest\" took 0.002510547637939453 seconds to complete.\nFunction \"centroids_closest\" took 0.002504110336303711 seconds to complete.\nFunction \"centroids_closest\" took 0.002557516098022461 seconds to complete.\nFunction \"centroids_closest\" took 0.0025098323822021484 seconds to complete.\nFunction \"centroids_closest\" took 0.002501964569091797 seconds to complete.\nFunction \"centroids_closest\" took 0.002557992935180664 seconds to complete.\nFunction \"centroids_closest\" took 0.0025031566619873047 seconds to complete.\nFunction \"centroids_closest\" took 0.0025665760040283203 seconds to complete.\nFunction \"centroids_closest\" took 0.0024971961975097656 seconds to complete.\nFunction \"centroids_closest\" took 0.002490997314453125 seconds to complete.\nFunction \"centroids_closest\" took 0.0025606155395507812 seconds to complete.\nFunction \"centroids_closest\" took 0.002490520477294922 seconds to complete.\nFunction \"centroids_closest\" took 0.061476945877075195 seconds to complete.\nFunction \"centroids_closest\" took 0.0025436878204345703 seconds to complete.\nFunction \"centroids_closest\" took 0.003549337387084961 seconds to complete.\nFunction \"centroids_closest\" took 0.002498149871826172 seconds to complete.\nFunction \"centroids_closest\" took 0.0024919509887695312 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.4271252155303955 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 3, elapsed-time: 0.427370\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 4",
            "label": "Bohrium/4",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-23a047ad-8cd8-4611-a57f-7f45a1e1b2c3.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/4'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 4 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-23a047ad-8cd8-4611-a57f-7f45a1e1b2c3.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-23a047ad-8cd8-4611-a57f-7f45a1e1b2c3.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 4 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-23a047ad-8cd8-4611-a57f-7f45a1e1b2c3.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-23a047ad-8cd8-4611-a57f-7f45a1e1b2c3.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 4 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-23a047ad-8cd8-4611-a57f-7f45a1e1b2c3.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-23a047ad-8cd8-4611-a57f-7f45a1e1b2c3.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.2432553768157959 seconds to complete.\nFunction \"centroids_closest\" took 0.0032911300659179688 seconds to complete.\nFunction \"centroids_closest\" took 0.00266265869140625 seconds to complete.\nFunction \"centroids_closest\" took 0.0026230812072753906 seconds to complete.\nFunction \"centroids_closest\" took 0.0026645660400390625 seconds to complete.\nFunction \"centroids_closest\" took 0.0026166439056396484 seconds to complete.\nFunction \"centroids_closest\" took 0.002637147903442383 seconds to complete.\nFunction \"centroids_closest\" took 0.002654552459716797 seconds to complete.\nFunction \"centroids_closest\" took 0.002618551254272461 seconds to complete.\nFunction \"centroids_closest\" took 0.0026328563690185547 seconds to complete.\nFunction \"centroids_closest\" took 0.002668142318725586 seconds to complete.\nFunction \"centroids_closest\" took 0.002620220184326172 seconds to complete.\nFunction \"centroids_closest\" took 0.002620697021484375 seconds to complete.\nFunction \"centroids_closest\" took 0.002680063247680664 seconds to complete.\nFunction \"centroids_closest\" took 0.002608060836791992 seconds to complete.\nFunction \"centroids_closest\" took 0.0026330947875976562 seconds to complete.\nFunction \"centroids_closest\" took 0.0026290416717529297 seconds to complete.\nFunction \"centroids_closest\" took 0.0026259422302246094 seconds to complete.\nFunction \"centroids_closest\" took 0.0026290416717529297 seconds to complete.\nFunction \"centroids_closest\" took 0.002626180648803711 seconds to complete.\nFunction \"centroids_closest\" took 0.0026450157165527344 seconds to complete.\nFunction \"centroids_closest\" took 0.0026273727416992188 seconds to complete.\nFunction \"centroids_closest\" took 0.0026214122772216797 seconds to complete.\nFunction \"centroids_closest\" took 0.005287885665893555 seconds to complete.\nFunction \"centroids_closest\" took 0.003614664077758789 seconds to complete.\nFunction \"centroids_closest\" took 0.0026628971099853516 seconds to complete.\nFunction \"centroids_closest\" took 0.0026187896728515625 seconds to complete.\nFunction \"centroids_closest\" took 0.0026171207427978516 seconds to complete.\nFunction \"centroids_closest\" took 0.0026178359985351562 seconds to complete.\nFunction \"centroids_closest\" took 0.0026743412017822266 seconds to complete.\nFunction \"centroids_closest\" took 0.0026330947875976562 seconds to complete.\nFunction \"centroids_closest\" took 0.002664327621459961 seconds to complete.\nFunction \"centroids_closest\" took 0.002679586410522461 seconds to complete.\nFunction \"centroids_closest\" took 0.00264739990234375 seconds to complete.\nFunction \"centroids_closest\" took 0.0029082298278808594 seconds to complete.\nFunction \"centroids_closest\" took 0.00657200813293457 seconds to complete.\nFunction \"centroids_closest\" took 0.0026760101318359375 seconds to complete.\nFunction \"centroids_closest\" took 0.002645730972290039 seconds to complete.\nFunction \"centroids_closest\" took 0.002681255340576172 seconds to complete.\nFunction \"centroids_closest\" took 0.0026328563690185547 seconds to complete.\nFunction \"centroids_closest\" took 0.0027081966400146484 seconds to complete.\nFunction \"centroids_closest\" took 0.0026433467864990234 seconds to complete.\nFunction \"centroids_closest\" took 0.002992868423461914 seconds to complete.\nFunction \"centroids_closest\" took 0.002651214599609375 seconds to complete.\nFunction \"centroids_closest\" took 0.002628803253173828 seconds to complete.\nFunction \"centroids_closest\" took 0.004309654235839844 seconds to complete.\nFunction \"centroids_closest\" took 0.006632566452026367 seconds to complete.\nFunction \"centroids_closest\" took 0.002651691436767578 seconds to complete.\nFunction \"centroids_closest\" took 0.0026280879974365234 seconds to complete.\nFunction \"centroids_closest\" took 0.0026412010192871094 seconds to complete.\nFunction \"centroids_closest\" took 0.003998279571533203 seconds to complete.\nFunction \"centroids_closest\" took 0.002706766128540039 seconds to complete.\nFunction \"centroids_closest\" took 0.002630472183227539 seconds to complete.\nFunction \"centroids_closest\" took 0.0026650428771972656 seconds to complete.\nFunction \"centroids_closest\" took 0.002625703811645508 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 1.2110085487365723 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 4, elapsed-time: 1.211271\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.006618022918701172 seconds to complete.\nFunction \"centroids_closest\" took 0.002717733383178711 seconds to complete.\nFunction \"centroids_closest\" took 0.0027282238006591797 seconds to complete.\nFunction \"centroids_closest\" took 0.0026471614837646484 seconds to complete.\nFunction \"centroids_closest\" took 0.002620697021484375 seconds to complete.\nFunction \"centroids_closest\" took 0.002627849578857422 seconds to complete.\nFunction \"centroids_closest\" took 0.0026590824127197266 seconds to complete.\nFunction \"centroids_closest\" took 0.002618074417114258 seconds to complete.\nFunction \"centroids_closest\" took 0.002631664276123047 seconds to complete.\nFunction \"centroids_closest\" took 0.002666473388671875 seconds to complete.\nFunction \"centroids_closest\" took 0.002624988555908203 seconds to complete.\nFunction \"centroids_closest\" took 0.0026237964630126953 seconds to complete.\nFunction \"centroids_closest\" took 0.002620220184326172 seconds to complete.\nFunction \"centroids_closest\" took 0.002914905548095703 seconds to complete.\nFunction \"centroids_closest\" took 0.002616405487060547 seconds to complete.\nFunction \"centroids_closest\" took 0.002613067626953125 seconds to complete.\nFunction \"centroids_closest\" took 0.0026111602783203125 seconds to complete.\nFunction \"centroids_closest\" took 0.0026254653930664062 seconds to complete.\nFunction \"centroids_closest\" took 0.0027866363525390625 seconds to complete.\nFunction \"centroids_closest\" took 0.0027031898498535156 seconds to complete.\nFunction \"centroids_closest\" took 0.0026254653930664062 seconds to complete.\nFunction \"centroids_closest\" took 0.0026237964630126953 seconds to complete.\nFunction \"centroids_closest\" took 0.0026192665100097656 seconds to complete.\nFunction \"centroids_closest\" took 0.0026085376739501953 seconds to complete.\nFunction \"centroids_closest\" took 0.0026209354400634766 seconds to complete.\nFunction \"centroids_closest\" took 0.00262451171875 seconds to complete.\nFunction \"centroids_closest\" took 0.002617359161376953 seconds to complete.\nFunction \"centroids_closest\" took 0.0026230812072753906 seconds to complete.\nFunction \"centroids_closest\" took 0.0026199817657470703 seconds to complete.\nFunction \"centroids_closest\" took 0.0026137828826904297 seconds to complete.\nFunction \"centroids_closest\" took 0.002612590789794922 seconds to complete.\nFunction \"centroids_closest\" took 0.0026204586029052734 seconds to complete.\nFunction \"centroids_closest\" took 0.002624988555908203 seconds to complete.\nFunction \"centroids_closest\" took 0.0026178359985351562 seconds to complete.\nFunction \"centroids_closest\" took 0.0026221275329589844 seconds to complete.\nFunction \"centroids_closest\" took 0.002619028091430664 seconds to complete.\nFunction \"centroids_closest\" took 0.0026230812072753906 seconds to complete.\nFunction \"centroids_closest\" took 0.002619504928588867 seconds to complete.\nFunction \"centroids_closest\" took 0.002649068832397461 seconds to complete.\nFunction \"centroids_closest\" took 0.02622222900390625 seconds to complete.\nFunction \"centroids_closest\" took 0.00918269157409668 seconds to complete.\nFunction \"centroids_closest\" took 0.002648591995239258 seconds to complete.\nFunction \"centroids_closest\" took 0.0026619434356689453 seconds to complete.\nFunction \"centroids_closest\" took 0.002628803253173828 seconds to complete.\nFunction \"centroids_closest\" took 0.002619504928588867 seconds to complete.\nFunction \"centroids_closest\" took 0.0026276111602783203 seconds to complete.\nFunction \"centroids_closest\" took 0.002637624740600586 seconds to complete.\nFunction \"centroids_closest\" took 0.0026297569274902344 seconds to complete.\nFunction \"centroids_closest\" took 0.002625703811645508 seconds to complete.\nFunction \"centroids_closest\" took 0.002616405487060547 seconds to complete.\nFunction \"centroids_closest\" took 0.0027420520782470703 seconds to complete.\nFunction \"centroids_closest\" took 0.002613544464111328 seconds to complete.\nFunction \"centroids_closest\" took 0.002616405487060547 seconds to complete.\nFunction \"centroids_closest\" took 0.002619028091430664 seconds to complete.\nFunction \"centroids_closest\" took 0.0026216506958007812 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.6629559993743896 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 4, elapsed-time: 0.663213\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.004918336868286133 seconds to complete.\nFunction \"centroids_closest\" took 0.0026390552520751953 seconds to complete.\nFunction \"centroids_closest\" took 0.0026013851165771484 seconds to complete.\nFunction \"centroids_closest\" took 0.0025959014892578125 seconds to complete.\nFunction \"centroids_closest\" took 0.0025963783264160156 seconds to complete.\nFunction \"centroids_closest\" took 0.0025987625122070312 seconds to complete.\nFunction \"centroids_closest\" took 0.0025954246520996094 seconds to complete.\nFunction \"centroids_closest\" took 0.002600431442260742 seconds to complete.\nFunction \"centroids_closest\" took 0.0025947093963623047 seconds to complete.\nFunction \"centroids_closest\" took 0.0026061534881591797 seconds to complete.\nFunction \"centroids_closest\" took 0.002589702606201172 seconds to complete.\nFunction \"centroids_closest\" took 0.0025968551635742188 seconds to complete.\nFunction \"centroids_closest\" took 0.0025963783264160156 seconds to complete.\nFunction \"centroids_closest\" took 0.0025904178619384766 seconds to complete.\nFunction \"centroids_closest\" took 0.002590179443359375 seconds to complete.\nFunction \"centroids_closest\" took 0.002588987350463867 seconds to complete.\nFunction \"centroids_closest\" took 0.0025904178619384766 seconds to complete.\nFunction \"centroids_closest\" took 0.002683877944946289 seconds to complete.\nFunction \"centroids_closest\" took 0.002718687057495117 seconds to complete.\nFunction \"centroids_closest\" took 0.0030014514923095703 seconds to complete.\nFunction \"centroids_closest\" took 0.002623319625854492 seconds to complete.\nFunction \"centroids_closest\" took 0.002625703811645508 seconds to complete.\nFunction \"centroids_closest\" took 0.002795696258544922 seconds to complete.\nFunction \"centroids_closest\" took 0.0026082992553710938 seconds to complete.\nFunction \"centroids_closest\" took 0.0026259422302246094 seconds to complete.\nFunction \"centroids_closest\" took 0.007235050201416016 seconds to complete.\nFunction \"centroids_closest\" took 0.0026443004608154297 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.38014888763427734 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 4, elapsed-time: 0.380407\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 5",
            "label": "Bohrium/5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-78c7fff9-3e91-4c3d-9b1e-0eea58679622.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-78c7fff9-3e91-4c3d-9b1e-0eea58679622.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-78c7fff9-3e91-4c3d-9b1e-0eea58679622.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-78c7fff9-3e91-4c3d-9b1e-0eea58679622.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-78c7fff9-3e91-4c3d-9b1e-0eea58679622.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-78c7fff9-3e91-4c3d-9b1e-0eea58679622.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-78c7fff9-3e91-4c3d-9b1e-0eea58679622.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.007513999938964844 seconds to complete.\nFunction \"centroids_closest\" took 0.0050046443939208984 seconds to complete.\nFunction \"centroids_closest\" took 0.00487065315246582 seconds to complete.\nFunction \"centroids_closest\" took 0.004863262176513672 seconds to complete.\nFunction \"centroids_closest\" took 0.004870176315307617 seconds to complete.\nFunction \"centroids_closest\" took 0.004966020584106445 seconds to complete.\nFunction \"centroids_closest\" took 0.005003929138183594 seconds to complete.\nFunction \"centroids_closest\" took 0.005040168762207031 seconds to complete.\nFunction \"centroids_closest\" took 0.005002021789550781 seconds to complete.\nFunction \"centroids_closest\" took 0.005033016204833984 seconds to complete.\nFunction \"centroids_closest\" took 0.005004167556762695 seconds to complete.\nFunction \"centroids_closest\" took 0.005008220672607422 seconds to complete.\nFunction \"centroids_closest\" took 0.008240699768066406 seconds to complete.\nFunction \"centroids_closest\" took 0.005410432815551758 seconds to complete.\nFunction \"centroids_closest\" took 0.005042314529418945 seconds to complete.\nFunction \"centroids_closest\" took 0.005026340484619141 seconds to complete.\nFunction \"centroids_closest\" took 0.00492548942565918 seconds to complete.\nFunction \"centroids_closest\" took 0.013395547866821289 seconds to complete.\nFunction \"centroids_closest\" took 0.005328178405761719 seconds to complete.\nFunction \"centroids_closest\" took 0.004909515380859375 seconds to complete.\nFunction \"centroids_closest\" took 0.004857778549194336 seconds to complete.\nFunction \"centroids_closest\" took 0.004986286163330078 seconds to complete.\nFunction \"centroids_closest\" took 0.005068778991699219 seconds to complete.\nFunction \"centroids_closest\" took 0.005101203918457031 seconds to complete.\nFunction \"centroids_closest\" took 0.005027294158935547 seconds to complete.\nFunction \"centroids_closest\" took 0.005102634429931641 seconds to complete.\nFunction \"centroids_closest\" took 0.005232810974121094 seconds to complete.\nFunction \"centroids_closest\" took 0.005223512649536133 seconds to complete.\nFunction \"centroids_closest\" took 0.005139350891113281 seconds to complete.\nFunction \"centroids_closest\" took 0.005113840103149414 seconds to complete.\nFunction \"centroids_closest\" took 0.005172014236450195 seconds to complete.\nFunction \"centroids_closest\" took 0.005055904388427734 seconds to complete.\nFunction \"centroids_closest\" took 0.005095481872558594 seconds to complete.\nFunction \"centroids_closest\" took 0.005107402801513672 seconds to complete.\nFunction \"centroids_closest\" took 0.005155801773071289 seconds to complete.\nFunction \"centroids_closest\" took 0.005064487457275391 seconds to complete.\nFunction \"centroids_closest\" took 0.005068540573120117 seconds to complete.\nFunction \"centroids_closest\" took 0.00509333610534668 seconds to complete.\nFunction \"centroids_closest\" took 0.005072832107543945 seconds to complete.\nFunction \"centroids_closest\" took 0.005316734313964844 seconds to complete.\nFunction \"centroids_closest\" took 0.005103349685668945 seconds to complete.\nFunction \"centroids_closest\" took 0.005097150802612305 seconds to complete.\nFunction \"centroids_closest\" took 0.00513458251953125 seconds to complete.\nFunction \"centroids_closest\" took 0.005046844482421875 seconds to complete.\nFunction \"centroids_closest\" took 0.0050046443939208984 seconds to complete.\nFunction \"centroids_closest\" took 0.0050449371337890625 seconds to complete.\nFunction \"centroids_closest\" took 0.005082130432128906 seconds to complete.\nFunction \"centroids_closest\" took 0.0050241947174072266 seconds to complete.\nFunction \"centroids_closest\" took 0.005024909973144531 seconds to complete.\nFunction \"centroids_closest\" took 0.005312681198120117 seconds to complete.\nFunction \"centroids_closest\" took 0.005011796951293945 seconds to complete.\nFunction \"centroids_closest\" took 0.007955789566040039 seconds to complete.\nFunction \"centroids_closest\" took 0.005071878433227539 seconds to complete.\nFunction \"centroids_closest\" took 0.00509333610534668 seconds to complete.\nFunction \"centroids_closest\" took 0.005157947540283203 seconds to complete.\nFunction \"centroids_closest\" took 0.005005836486816406 seconds to complete.\nFunction \"centroids_closest\" took 0.008589029312133789 seconds to complete.\nFunction \"centroids_closest\" took 0.0049321651458740234 seconds to complete.\nFunction \"centroids_closest\" took 0.0051190853118896484 seconds to complete.\nFunction \"centroids_closest\" took 0.005013942718505859 seconds to complete.\nFunction \"centroids_closest\" took 0.005020618438720703 seconds to complete.\nFunction \"centroids_closest\" took 0.0051419734954833984 seconds to complete.\nFunction \"centroids_closest\" took 0.0051195621490478516 seconds to complete.\nFunction \"centroids_closest\" took 0.0050318241119384766 seconds to complete.\nFunction \"centroids_closest\" took 0.005021095275878906 seconds to complete.\nFunction \"centroids_closest\" took 0.005013465881347656 seconds to complete.\nFunction \"centroids_closest\" took 0.00503993034362793 seconds to complete.\nFunction \"centroids_closest\" took 0.005039691925048828 seconds to complete.\nFunction \"centroids_closest\" took 0.005034446716308594 seconds to complete.\nFunction \"centroids_closest\" took 0.005250215530395508 seconds to complete.\nFunction \"centroids_closest\" took 0.005051374435424805 seconds to complete.\nFunction \"centroids_closest\" took 0.005031585693359375 seconds to complete.\nFunction \"centroids_closest\" took 0.00511932373046875 seconds to complete.\nFunction \"centroids_closest\" took 0.0050928592681884766 seconds to complete.\nFunction \"centroids_closest\" took 0.0050313472747802734 seconds to complete.\nFunction \"centroids_closest\" took 0.005099773406982422 seconds to complete.\nFunction \"centroids_closest\" took 0.005084991455078125 seconds to complete.\nFunction \"centroids_closest\" took 0.00499272346496582 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 1.25295090675354 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 5, elapsed-time: 1.253228\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.007670402526855469 seconds to complete.\nFunction \"centroids_closest\" took 0.005094051361083984 seconds to complete.\nFunction \"centroids_closest\" took 0.0049343109130859375 seconds to complete.\nFunction \"centroids_closest\" took 0.005054950714111328 seconds to complete.\nFunction \"centroids_closest\" took 0.005087852478027344 seconds to complete.\nFunction \"centroids_closest\" took 0.005063533782958984 seconds to complete.\nFunction \"centroids_closest\" took 0.005135774612426758 seconds to complete.\nFunction \"centroids_closest\" took 0.005117893218994141 seconds to complete.\nFunction \"centroids_closest\" took 0.0051116943359375 seconds to complete.\nFunction \"centroids_closest\" took 0.005101203918457031 seconds to complete.\nFunction \"centroids_closest\" took 0.005102634429931641 seconds to complete.\nFunction \"centroids_closest\" took 0.00504755973815918 seconds to complete.\nFunction \"centroids_closest\" took 0.005018949508666992 seconds to complete.\nFunction \"centroids_closest\" took 0.005110740661621094 seconds to complete.\nFunction \"centroids_closest\" took 0.00511479377746582 seconds to complete.\nFunction \"centroids_closest\" took 0.005168437957763672 seconds to complete.\nFunction \"centroids_closest\" took 0.005036115646362305 seconds to complete.\nFunction \"centroids_closest\" took 0.005087614059448242 seconds to complete.\nFunction \"centroids_closest\" took 0.005219459533691406 seconds to complete.\nFunction \"centroids_closest\" took 0.0050945281982421875 seconds to complete.\nFunction \"centroids_closest\" took 0.005128383636474609 seconds to complete.\nFunction \"centroids_closest\" took 0.005095720291137695 seconds to complete.\nFunction \"centroids_closest\" took 0.005266427993774414 seconds to complete.\nFunction \"centroids_closest\" took 0.0050640106201171875 seconds to complete.\nFunction \"centroids_closest\" took 0.005026102066040039 seconds to complete.\nFunction \"centroids_closest\" took 0.005090951919555664 seconds to complete.\nFunction \"centroids_closest\" took 0.004884481430053711 seconds to complete.\nFunction \"centroids_closest\" took 0.0048558712005615234 seconds to complete.\nFunction \"centroids_closest\" took 0.004855155944824219 seconds to complete.\nFunction \"centroids_closest\" took 0.005038261413574219 seconds to complete.\nFunction \"centroids_closest\" took 0.023304462432861328 seconds to complete.\nFunction \"centroids_closest\" took 0.004858970642089844 seconds to complete.\nFunction \"centroids_closest\" took 0.0050089359283447266 seconds to complete.\nFunction \"centroids_closest\" took 0.00511479377746582 seconds to complete.\nFunction \"centroids_closest\" took 0.0050220489501953125 seconds to complete.\nFunction \"centroids_closest\" took 0.005046367645263672 seconds to complete.\nFunction \"centroids_closest\" took 0.005049705505371094 seconds to complete.\nFunction \"centroids_closest\" took 0.0050389766693115234 seconds to complete.\nFunction \"centroids_closest\" took 0.005072116851806641 seconds to complete.\nFunction \"centroids_closest\" took 0.005076169967651367 seconds to complete.\nFunction \"centroids_closest\" took 0.0051898956298828125 seconds to complete.\nFunction \"centroids_closest\" took 0.005095005035400391 seconds to complete.\nFunction \"centroids_closest\" took 0.005056142807006836 seconds to complete.\nFunction \"centroids_closest\" took 0.0051119327545166016 seconds to complete.\nFunction \"centroids_closest\" took 0.0051271915435791016 seconds to complete.\nFunction \"centroids_closest\" took 0.005116462707519531 seconds to complete.\nFunction \"centroids_closest\" took 0.0054225921630859375 seconds to complete.\nFunction \"centroids_closest\" took 0.005148410797119141 seconds to complete.\nFunction \"centroids_closest\" took 0.005121469497680664 seconds to complete.\nFunction \"centroids_closest\" took 0.005171775817871094 seconds to complete.\nFunction \"centroids_closest\" took 0.005167961120605469 seconds to complete.\nFunction \"centroids_closest\" took 0.005146980285644531 seconds to complete.\nFunction \"centroids_closest\" took 0.005532026290893555 seconds to complete.\nFunction \"centroids_closest\" took 0.005248069763183594 seconds to complete.\nFunction \"centroids_closest\" took 0.005014657974243164 seconds to complete.\nFunction \"centroids_closest\" took 0.005112886428833008 seconds to complete.\nFunction \"centroids_closest\" took 0.005141258239746094 seconds to complete.\nFunction \"centroids_closest\" took 0.005132198333740234 seconds to complete.\nFunction \"centroids_closest\" took 0.007536172866821289 seconds to complete.\nFunction \"centroids_closest\" took 0.005187511444091797 seconds to complete.\nFunction \"centroids_closest\" took 0.005206108093261719 seconds to complete.\nFunction \"centroids_closest\" took 0.005082607269287109 seconds to complete.\nFunction \"centroids_closest\" took 0.005093097686767578 seconds to complete.\nFunction \"centroids_closest\" took 0.005112648010253906 seconds to complete.\nFunction \"centroids_closest\" took 0.005048274993896484 seconds to complete.\nFunction \"centroids_closest\" took 0.005072832107543945 seconds to complete.\nFunction \"centroids_closest\" took 0.005030393600463867 seconds to complete.\nFunction \"centroids_closest\" took 0.0050466060638427734 seconds to complete.\nFunction \"centroids_closest\" took 0.005102872848510742 seconds to complete.\nFunction \"centroids_closest\" took 0.005057573318481445 seconds to complete.\nFunction \"centroids_closest\" took 0.005094766616821289 seconds to complete.\nFunction \"centroids_closest\" took 0.005097866058349609 seconds to complete.\nFunction \"centroids_closest\" took 0.0051267147064208984 seconds to complete.\nFunction \"centroids_closest\" took 0.0051271915435791016 seconds to complete.\nFunction \"centroids_closest\" took 0.005218505859375 seconds to complete.\nFunction \"centroids_closest\" took 0.005159616470336914 seconds to complete.\nFunction \"centroids_closest\" took 0.0050580501556396484 seconds to complete.\nFunction \"centroids_closest\" took 0.005086183547973633 seconds to complete.\nFunction \"centroids_closest\" took 0.005143404006958008 seconds to complete.\nFunction \"centroids_closest\" took 0.005109310150146484 seconds to complete.\nFunction \"centroids_closest\" took 0.00511479377746582 seconds to complete.\nFunction \"centroids_closest\" took 0.005117893218994141 seconds to complete.\nFunction \"centroids_closest\" took 0.005155086517333984 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 1.371431589126587 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 5, elapsed-time: 1.371832\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.007598876953125 seconds to complete.\nFunction \"centroids_closest\" took 0.005054950714111328 seconds to complete.\nFunction \"centroids_closest\" took 0.004925727844238281 seconds to complete.\nFunction \"centroids_closest\" took 0.007323265075683594 seconds to complete.\nFunction \"centroids_closest\" took 0.004866361618041992 seconds to complete.\nFunction \"centroids_closest\" took 0.010279655456542969 seconds to complete.\nFunction \"centroids_closest\" took 0.005803823471069336 seconds to complete.\nFunction \"centroids_closest\" took 0.004881620407104492 seconds to complete.\nFunction \"centroids_closest\" took 0.0049092769622802734 seconds to complete.\nFunction \"centroids_closest\" took 0.005117654800415039 seconds to complete.\nFunction \"centroids_closest\" took 0.005108833312988281 seconds to complete.\nFunction \"centroids_closest\" took 0.0050814151763916016 seconds to complete.\nFunction \"centroids_closest\" took 0.005248308181762695 seconds to complete.\nFunction \"centroids_closest\" took 0.00509190559387207 seconds to complete.\nFunction \"centroids_closest\" took 0.00511479377746582 seconds to complete.\nFunction \"centroids_closest\" took 0.005121946334838867 seconds to complete.\nFunction \"centroids_closest\" took 0.005167961120605469 seconds to complete.\nFunction \"centroids_closest\" took 0.005177021026611328 seconds to complete.\nFunction \"centroids_closest\" took 0.0051805973052978516 seconds to complete.\nFunction \"centroids_closest\" took 0.005088329315185547 seconds to complete.\nFunction \"centroids_closest\" took 0.005167245864868164 seconds to complete.\nFunction \"centroids_closest\" took 0.00506591796875 seconds to complete.\nFunction \"centroids_closest\" took 0.005110979080200195 seconds to complete.\nFunction \"centroids_closest\" took 0.005544900894165039 seconds to complete.\nFunction \"centroids_closest\" took 0.0050089359283447266 seconds to complete.\nFunction \"centroids_closest\" took 0.005044460296630859 seconds to complete.\nFunction \"centroids_closest\" took 0.005139589309692383 seconds to complete.\nFunction \"centroids_closest\" took 0.019190073013305664 seconds to complete.\nFunction \"centroids_closest\" took 0.014445304870605469 seconds to complete.\nFunction \"centroids_closest\" took 0.005171298980712891 seconds to complete.\nFunction \"centroids_closest\" took 0.005103349685668945 seconds to complete.\nFunction \"centroids_closest\" took 0.005115032196044922 seconds to complete.\nFunction \"centroids_closest\" took 0.005131721496582031 seconds to complete.\nFunction \"centroids_closest\" took 0.005154609680175781 seconds to complete.\nFunction \"centroids_closest\" took 0.0050356388092041016 seconds to complete.\nFunction \"centroids_closest\" took 0.005120277404785156 seconds to complete.\nFunction \"centroids_closest\" took 0.005041360855102539 seconds to complete.\nFunction \"centroids_closest\" took 0.0050754547119140625 seconds to complete.\nFunction \"centroids_closest\" took 0.005116939544677734 seconds to complete.\nFunction \"centroids_closest\" took 0.0050923824310302734 seconds to complete.\nFunction \"centroids_closest\" took 0.005104780197143555 seconds to complete.\nFunction \"centroids_closest\" took 0.0050961971282958984 seconds to complete.\nFunction \"centroids_closest\" took 0.0050847530364990234 seconds to complete.\nFunction \"centroids_closest\" took 0.005097389221191406 seconds to complete.\nFunction \"centroids_closest\" took 0.0051496028900146484 seconds to complete.\nFunction \"centroids_closest\" took 0.005429506301879883 seconds to complete.\nFunction \"centroids_closest\" took 0.005185127258300781 seconds to complete.\nFunction \"centroids_closest\" took 0.005149126052856445 seconds to complete.\nFunction \"centroids_closest\" took 0.005044221878051758 seconds to complete.\nFunction \"centroids_closest\" took 0.005024909973144531 seconds to complete.\nFunction \"centroids_closest\" took 0.005659341812133789 seconds to complete.\nFunction \"centroids_closest\" took 0.005089759826660156 seconds to complete.\nFunction \"centroids_closest\" took 0.005028963088989258 seconds to complete.\nFunction \"centroids_closest\" took 0.005054950714111328 seconds to complete.\nFunction \"centroids_closest\" took 0.005023002624511719 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.9217040538787842 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 5, elapsed-time: 0.921984\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 6",
            "label": "Bohrium/6",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-c28e655b-65cd-4c4d-b25d-87fc9e6b5ac0.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/6'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 6 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-c28e655b-65cd-4c4d-b25d-87fc9e6b5ac0.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-c28e655b-65cd-4c4d-b25d-87fc9e6b5ac0.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 6 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-c28e655b-65cd-4c4d-b25d-87fc9e6b5ac0.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-c28e655b-65cd-4c4d-b25d-87fc9e6b5ac0.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 6 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-c28e655b-65cd-4c4d-b25d-87fc9e6b5ac0.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-c28e655b-65cd-4c4d-b25d-87fc9e6b5ac0.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.26311159133911133 seconds to complete.\nFunction \"centroids_closest\" took 0.02950572967529297 seconds to complete.\nFunction \"centroids_closest\" took 0.02860260009765625 seconds to complete.\nFunction \"centroids_closest\" took 0.02906489372253418 seconds to complete.\nFunction \"centroids_closest\" took 0.06154966354370117 seconds to complete.\nFunction \"centroids_closest\" took 0.02828526496887207 seconds to complete.\nFunction \"centroids_closest\" took 0.02908492088317871 seconds to complete.\nFunction \"centroids_closest\" took 0.029169559478759766 seconds to complete.\nFunction \"centroids_closest\" took 0.029146909713745117 seconds to complete.\nFunction \"centroids_closest\" took 0.029090404510498047 seconds to complete.\nFunction \"centroids_closest\" took 0.029610872268676758 seconds to complete.\nFunction \"centroids_closest\" took 0.029206275939941406 seconds to complete.\nFunction \"centroids_closest\" took 0.02922821044921875 seconds to complete.\nFunction \"centroids_closest\" took 0.03130197525024414 seconds to complete.\nFunction \"centroids_closest\" took 0.029674530029296875 seconds to complete.\nFunction \"centroids_closest\" took 0.03488278388977051 seconds to complete.\nFunction \"centroids_closest\" took 0.032670021057128906 seconds to complete.\nFunction \"centroids_closest\" took 0.030287742614746094 seconds to complete.\nFunction \"centroids_closest\" took 0.03242611885070801 seconds to complete.\nFunction \"centroids_closest\" took 0.029204607009887695 seconds to complete.\nFunction \"centroids_closest\" took 0.05271720886230469 seconds to complete.\nFunction \"centroids_closest\" took 0.028071165084838867 seconds to complete.\nFunction \"centroids_closest\" took 0.029463768005371094 seconds to complete.\nFunction \"centroids_closest\" took 0.029308319091796875 seconds to complete.\nFunction \"centroids_closest\" took 0.02951192855834961 seconds to complete.\nFunction \"centroids_closest\" took 0.02930283546447754 seconds to complete.\nFunction \"centroids_closest\" took 0.029337167739868164 seconds to complete.\nFunction \"centroids_closest\" took 0.029345035552978516 seconds to complete.\nFunction \"centroids_closest\" took 0.02924823760986328 seconds to complete.\nFunction \"centroids_closest\" took 0.029160499572753906 seconds to complete.\nFunction \"centroids_closest\" took 0.029663801193237305 seconds to complete.\nFunction \"centroids_closest\" took 0.029265165328979492 seconds to complete.\nFunction \"centroids_closest\" took 0.029172658920288086 seconds to complete.\nFunction \"centroids_closest\" took 0.029631614685058594 seconds to complete.\nFunction \"centroids_closest\" took 0.029100418090820312 seconds to complete.\nFunction \"centroids_closest\" took 0.029465198516845703 seconds to complete.\nFunction \"centroids_closest\" took 0.029146432876586914 seconds to complete.\nFunction \"centroids_closest\" took 0.04741096496582031 seconds to complete.\nFunction \"centroids_closest\" took 0.05609750747680664 seconds to complete.\nFunction \"centroids_closest\" took 0.02832627296447754 seconds to complete.\nFunction \"centroids_closest\" took 0.04465770721435547 seconds to complete.\nFunction \"centroids_closest\" took 0.029498815536499023 seconds to complete.\nFunction \"centroids_closest\" took 0.02904677391052246 seconds to complete.\nFunction \"centroids_closest\" took 0.02910327911376953 seconds to complete.\nFunction \"centroids_closest\" took 0.029408931732177734 seconds to complete.\nFunction \"centroids_closest\" took 0.02910470962524414 seconds to complete.\nFunction \"centroids_closest\" took 0.03324246406555176 seconds to complete.\nFunction \"centroids_closest\" took 0.02930760383605957 seconds to complete.\nFunction \"centroids_closest\" took 0.029248952865600586 seconds to complete.\nFunction \"centroids_closest\" took 0.029095172882080078 seconds to complete.\nFunction \"centroids_closest\" took 0.02928328514099121 seconds to complete.\nFunction \"centroids_closest\" took 0.029077768325805664 seconds to complete.\nFunction \"centroids_closest\" took 0.02906012535095215 seconds to complete.\nFunction \"centroids_closest\" took 0.02912592887878418 seconds to complete.\nFunction \"centroids_closest\" took 0.033139705657958984 seconds to complete.\nFunction \"centroids_closest\" took 0.02878713607788086 seconds to complete.\nFunction \"centroids_closest\" took 0.029123783111572266 seconds to complete.\nFunction \"centroids_closest\" took 0.029033660888671875 seconds to complete.\nFunction \"centroids_closest\" took 0.029080867767333984 seconds to complete.\nFunction \"centroids_closest\" took 0.02903008460998535 seconds to complete.\nFunction \"centroids_closest\" took 0.02912449836730957 seconds to complete.\nFunction \"centroids_closest\" took 0.030232667922973633 seconds to complete.\nFunction \"centroids_closest\" took 0.028807640075683594 seconds to complete.\nFunction \"centroids_closest\" took 0.03299522399902344 seconds to complete.\nFunction \"centroids_closest\" took 0.02928328514099121 seconds to complete.\nFunction \"centroids_closest\" took 0.029285192489624023 seconds to complete.\nFunction \"centroids_closest\" took 0.02931380271911621 seconds to complete.\nFunction \"centroids_closest\" took 0.0284731388092041 seconds to complete.\nFunction \"centroids_closest\" took 0.02905869483947754 seconds to complete.\nFunction \"centroids_closest\" took 0.032874345779418945 seconds to complete.\nFunction \"centroids_closest\" took 0.040694475173950195 seconds to complete.\nFunction \"centroids_closest\" took 0.029077529907226562 seconds to complete.\nFunction \"centroids_closest\" took 0.029008865356445312 seconds to complete.\nFunction \"centroids_closest\" took 0.029091596603393555 seconds to complete.\nFunction \"centroids_closest\" took 0.029154062271118164 seconds to complete.\nFunction \"centroids_closest\" took 0.029219388961791992 seconds to complete.\nFunction \"centroids_closest\" took 0.029137134552001953 seconds to complete.\nFunction \"centroids_closest\" took 0.03272819519042969 seconds to complete.\nFunction \"centroids_closest\" took 0.02929544448852539 seconds to complete.\nFunction \"centroids_closest\" took 0.029401302337646484 seconds to complete.\nFunction \"centroids_closest\" took 0.029544830322265625 seconds to complete.\nFunction \"centroids_closest\" took 0.029391765594482422 seconds to complete.\nFunction \"centroids_closest\" took 0.02910304069519043 seconds to complete.\nFunction \"centroids_closest\" took 0.029239177703857422 seconds to complete.\nFunction \"centroids_closest\" took 0.02895832061767578 seconds to complete.\nFunction \"centroids_closest\" took 0.029073476791381836 seconds to complete.\nFunction \"centroids_closest\" took 0.029189109802246094 seconds to complete.\nFunction \"centroids_closest\" took 0.03808116912841797 seconds to complete.\nFunction \"centroids_closest\" took 0.027694225311279297 seconds to complete.\nFunction \"centroids_closest\" took 0.028967618942260742 seconds to complete.\nFunction \"centroids_closest\" took 0.02942800521850586 seconds to complete.\nFunction \"centroids_closest\" took 0.029163122177124023 seconds to complete.\nFunction \"centroids_closest\" took 0.04591083526611328 seconds to complete.\nFunction \"centroids_closest\" took 0.030889272689819336 seconds to complete.\nFunction \"centroids_closest\" took 0.029801607131958008 seconds to complete.\nFunction \"centroids_closest\" took 0.0292203426361084 seconds to complete.\nFunction \"centroids_closest\" took 0.053162574768066406 seconds to complete.\nFunction \"centroids_closest\" took 0.031005382537841797 seconds to complete.\nFunction \"centroids_closest\" took 0.032123565673828125 seconds to complete.\nFunction \"centroids_closest\" took 0.034055233001708984 seconds to complete.\nFunction \"centroids_closest\" took 0.03279709815979004 seconds to complete.\nFunction \"centroids_closest\" took 0.03271651268005371 seconds to complete.\nFunction \"centroids_closest\" took 0.029572725296020508 seconds to complete.\nFunction \"centroids_closest\" took 0.039113521575927734 seconds to complete.\nFunction \"centroids_closest\" took 0.03921198844909668 seconds to complete.\nFunction \"centroids_closest\" took 0.029154062271118164 seconds to complete.\nFunction \"centroids_closest\" took 0.029206037521362305 seconds to complete.\nFunction \"centroids_closest\" took 0.029491662979125977 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 7.210298299789429 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 6, elapsed-time: 7.210634\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.03605365753173828 seconds to complete.\nFunction \"centroids_closest\" took 0.027647018432617188 seconds to complete.\nFunction \"centroids_closest\" took 0.02874279022216797 seconds to complete.\nFunction \"centroids_closest\" took 0.029047012329101562 seconds to complete.\nFunction \"centroids_closest\" took 0.02902984619140625 seconds to complete.\nFunction \"centroids_closest\" took 0.029261112213134766 seconds to complete.\nFunction \"centroids_closest\" took 0.028972864151000977 seconds to complete.\nFunction \"centroids_closest\" took 0.029680252075195312 seconds to complete.\nFunction \"centroids_closest\" took 0.029608726501464844 seconds to complete.\nFunction \"centroids_closest\" took 0.030785799026489258 seconds to complete.\nFunction \"centroids_closest\" took 0.029839515686035156 seconds to complete.\nFunction \"centroids_closest\" took 0.029247283935546875 seconds to complete.\nFunction \"centroids_closest\" took 0.0292971134185791 seconds to complete.\nFunction \"centroids_closest\" took 0.02984619140625 seconds to complete.\nFunction \"centroids_closest\" took 0.029059648513793945 seconds to complete.\nFunction \"centroids_closest\" took 0.029158592224121094 seconds to complete.\nFunction \"centroids_closest\" took 0.029787778854370117 seconds to complete.\nFunction \"centroids_closest\" took 0.06586718559265137 seconds to complete.\nFunction \"centroids_closest\" took 0.028680086135864258 seconds to complete.\nFunction \"centroids_closest\" took 0.02915787696838379 seconds to complete.\nFunction \"centroids_closest\" took 0.0291593074798584 seconds to complete.\nFunction \"centroids_closest\" took 0.029125452041625977 seconds to complete.\nFunction \"centroids_closest\" took 0.03269314765930176 seconds to complete.\nFunction \"centroids_closest\" took 0.029782772064208984 seconds to complete.\nFunction \"centroids_closest\" took 0.029511213302612305 seconds to complete.\nFunction \"centroids_closest\" took 0.02918839454650879 seconds to complete.\nFunction \"centroids_closest\" took 0.02963089942932129 seconds to complete.\nFunction \"centroids_closest\" took 0.02919316291809082 seconds to complete.\nFunction \"centroids_closest\" took 0.029201984405517578 seconds to complete.\nFunction \"centroids_closest\" took 0.029095888137817383 seconds to complete.\nFunction \"centroids_closest\" took 0.029091596603393555 seconds to complete.\nFunction \"centroids_closest\" took 0.02920055389404297 seconds to complete.\nFunction \"centroids_closest\" took 0.02941298484802246 seconds to complete.\nFunction \"centroids_closest\" took 0.04403805732727051 seconds to complete.\nFunction \"centroids_closest\" took 0.029970884323120117 seconds to complete.\nFunction \"centroids_closest\" took 0.03361964225769043 seconds to complete.\nFunction \"centroids_closest\" took 0.028994321823120117 seconds to complete.\nFunction \"centroids_closest\" took 0.029037952423095703 seconds to complete.\nFunction \"centroids_closest\" took 0.03180861473083496 seconds to complete.\nFunction \"centroids_closest\" took 0.029879331588745117 seconds to complete.\nFunction \"centroids_closest\" took 0.02937030792236328 seconds to complete.\nFunction \"centroids_closest\" took 0.029178857803344727 seconds to complete.\nFunction \"centroids_closest\" took 0.029152870178222656 seconds to complete.\nFunction \"centroids_closest\" took 0.030027151107788086 seconds to complete.\nFunction \"centroids_closest\" took 0.029290437698364258 seconds to complete.\nFunction \"centroids_closest\" took 0.029378890991210938 seconds to complete.\nFunction \"centroids_closest\" took 0.029094219207763672 seconds to complete.\nFunction \"centroids_closest\" took 0.02944779396057129 seconds to complete.\nFunction \"centroids_closest\" took 0.041721343994140625 seconds to complete.\nFunction \"centroids_closest\" took 0.03479361534118652 seconds to complete.\nFunction \"centroids_closest\" took 0.041176557540893555 seconds to complete.\nFunction \"centroids_closest\" took 0.03249382972717285 seconds to complete.\nFunction \"centroids_closest\" took 0.029122114181518555 seconds to complete.\nFunction \"centroids_closest\" took 0.02902388572692871 seconds to complete.\nFunction \"centroids_closest\" took 0.028964757919311523 seconds to complete.\nFunction \"centroids_closest\" took 0.029416322708129883 seconds to complete.\nFunction \"centroids_closest\" took 0.029393434524536133 seconds to complete.\nFunction \"centroids_closest\" took 0.029460430145263672 seconds to complete.\nFunction \"centroids_closest\" took 0.029335737228393555 seconds to complete.\nFunction \"centroids_closest\" took 0.03241586685180664 seconds to complete.\nFunction \"centroids_closest\" took 0.029752254486083984 seconds to complete.\nFunction \"centroids_closest\" took 0.03543901443481445 seconds to complete.\nFunction \"centroids_closest\" took 0.029576539993286133 seconds to complete.\nFunction \"centroids_closest\" took 0.03571605682373047 seconds to complete.\nFunction \"centroids_closest\" took 0.032465457916259766 seconds to complete.\nFunction \"centroids_closest\" took 0.029193401336669922 seconds to complete.\nFunction \"centroids_closest\" took 0.03747701644897461 seconds to complete.\nFunction \"centroids_closest\" took 0.0397944450378418 seconds to complete.\nFunction \"centroids_closest\" took 0.02884197235107422 seconds to complete.\nFunction \"centroids_closest\" took 0.029401063919067383 seconds to complete.\nFunction \"centroids_closest\" took 0.029511690139770508 seconds to complete.\nFunction \"centroids_closest\" took 0.02934575080871582 seconds to complete.\nFunction \"centroids_closest\" took 0.029298782348632812 seconds to complete.\nFunction \"centroids_closest\" took 0.042482852935791016 seconds to complete.\nFunction \"centroids_closest\" took 0.029003143310546875 seconds to complete.\nFunction \"centroids_closest\" took 0.029651880264282227 seconds to complete.\nFunction \"centroids_closest\" took 0.029582977294921875 seconds to complete.\nFunction \"centroids_closest\" took 0.029113054275512695 seconds to complete.\nFunction \"centroids_closest\" took 0.029148101806640625 seconds to complete.\nFunction \"centroids_closest\" took 0.02942943572998047 seconds to complete.\nFunction \"centroids_closest\" took 0.02902054786682129 seconds to complete.\nFunction \"centroids_closest\" took 0.029055118560791016 seconds to complete.\nFunction \"centroids_closest\" took 0.02951812744140625 seconds to complete.\nFunction \"centroids_closest\" took 0.04116487503051758 seconds to complete.\nFunction \"centroids_closest\" took 0.028887510299682617 seconds to complete.\nFunction \"centroids_closest\" took 0.028827667236328125 seconds to complete.\nFunction \"centroids_closest\" took 0.029158353805541992 seconds to complete.\nFunction \"centroids_closest\" took 0.028957366943359375 seconds to complete.\nFunction \"centroids_closest\" took 0.029486417770385742 seconds to complete.\nFunction \"centroids_closest\" took 0.02929234504699707 seconds to complete.\nFunction \"centroids_closest\" took 0.030132293701171875 seconds to complete.\nFunction \"centroids_closest\" took 0.02916693687438965 seconds to complete.\nFunction \"centroids_closest\" took 0.029244184494018555 seconds to complete.\nFunction \"centroids_closest\" took 0.0296480655670166 seconds to complete.\nFunction \"centroids_closest\" took 0.029155969619750977 seconds to complete.\nFunction \"centroids_closest\" took 0.029160022735595703 seconds to complete.\nFunction \"centroids_closest\" took 0.028934478759765625 seconds to complete.\nFunction \"centroids_closest\" took 0.02925705909729004 seconds to complete.\nFunction \"centroids_closest\" took 0.02921128273010254 seconds to complete.\nFunction \"centroids_closest\" took 0.02909708023071289 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 6.080256223678589 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 6, elapsed-time: 6.080569\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "starting\ninit: random\nFunction \"centroids_closest\" took 0.03204941749572754 seconds to complete.\nFunction \"centroids_closest\" took 0.02761983871459961 seconds to complete.\nFunction \"centroids_closest\" took 0.02891230583190918 seconds to complete.\nFunction \"centroids_closest\" took 0.029141664505004883 seconds to complete.\nFunction \"centroids_closest\" took 0.02907085418701172 seconds to complete.\nFunction \"centroids_closest\" took 0.029214859008789062 seconds to complete.\nFunction \"centroids_closest\" took 0.03976154327392578 seconds to complete.\nFunction \"centroids_closest\" took 0.028914451599121094 seconds to complete.\nFunction \"centroids_closest\" took 0.029224872589111328 seconds to complete.\nFunction \"centroids_closest\" took 0.029094696044921875 seconds to complete.\nFunction \"centroids_closest\" took 0.02924823760986328 seconds to complete.\nFunction \"centroids_closest\" took 0.029569625854492188 seconds to complete.\nFunction \"centroids_closest\" took 0.029569625854492188 seconds to complete.\nFunction \"centroids_closest\" took 0.029052257537841797 seconds to complete.\nFunction \"centroids_closest\" took 0.033808231353759766 seconds to complete.\nFunction \"centroids_closest\" took 0.02942204475402832 seconds to complete.\nFunction \"centroids_closest\" took 0.029261112213134766 seconds to complete.\nFunction \"centroids_closest\" took 0.029160737991333008 seconds to complete.\nFunction \"centroids_closest\" took 0.02948451042175293 seconds to complete.\nFunction \"centroids_closest\" took 0.02891063690185547 seconds to complete.\nFunction \"centroids_closest\" took 0.02939152717590332 seconds to complete.\nFunction \"centroids_closest\" took 0.02906632423400879 seconds to complete.\nFunction \"centroids_closest\" took 0.05446887016296387 seconds to complete.\nFunction \"centroids_closest\" took 0.04317474365234375 seconds to complete.\nFunction \"centroids_closest\" took 0.030737876892089844 seconds to complete.\nFunction \"centroids_closest\" took 0.029127836227416992 seconds to complete.\nFunction \"centroids_closest\" took 0.02918243408203125 seconds to complete.\nFunction \"centroids_closest\" took 0.02934885025024414 seconds to complete.\nFunction \"centroids_closest\" took 0.029630661010742188 seconds to complete.\nFunction \"centroids_closest\" took 0.029195070266723633 seconds to complete.\nFunction \"centroids_closest\" took 0.029654979705810547 seconds to complete.\nFunction \"centroids_closest\" took 0.05298209190368652 seconds to complete.\nFunction \"centroids_closest\" took 0.02930736541748047 seconds to complete.\nFunction \"centroids_closest\" took 0.03096914291381836 seconds to complete.\nFunction \"centroids_closest\" took 0.03644084930419922 seconds to complete.\nFunction \"centroids_closest\" took 0.030653953552246094 seconds to complete.\nFunction \"centroids_closest\" took 0.029584884643554688 seconds to complete.\nFunction \"centroids_closest\" took 0.030545711517333984 seconds to complete.\nFunction \"centroids_closest\" took 0.0612027645111084 seconds to complete.\nFunction \"centroids_closest\" took 0.03096294403076172 seconds to complete.\nFunction \"centroids_closest\" took 0.03179812431335449 seconds to complete.\nFunction \"centroids_closest\" took 0.028966188430786133 seconds to complete.\nFunction \"centroids_closest\" took 0.02902531623840332 seconds to complete.\nFunction \"centroids_closest\" took 0.029131650924682617 seconds to complete.\nFunction \"centroids_closest\" took 0.02976059913635254 seconds to complete.\nFunction \"centroids_closest\" took 0.029100656509399414 seconds to complete.\nFunction \"centroids_closest\" took 0.029993295669555664 seconds to complete.\nFunction \"centroids_closest\" took 0.03192567825317383 seconds to complete.\nFunction \"centroids_closest\" took 0.03783822059631348 seconds to complete.\nFunction \"centroids_closest\" took 0.03688240051269531 seconds to complete.\nFunction \"centroids_closest\" took 0.03308558464050293 seconds to complete.\nFunction \"centroids_closest\" took 0.0298919677734375 seconds to complete.\nFunction \"centroids_closest\" took 0.02903890609741211 seconds to complete.\nFunction \"centroids_closest\" took 0.028951406478881836 seconds to complete.\nFunction \"centroids_closest\" took 0.04882502555847168 seconds to complete.\nFunction \"centroids_closest\" took 0.04317355155944824 seconds to complete.\nFunction \"centroids_closest\" took 0.029045820236206055 seconds to complete.\nFunction \"centroids_closest\" took 0.02907276153564453 seconds to complete.\nFunction \"centroids_closest\" took 0.0291593074798584 seconds to complete.\nFunction \"centroids_closest\" took 0.02976202964782715 seconds to complete.\nFunction \"centroids_closest\" took 0.030722856521606445 seconds to complete.\nFunction \"centroids_closest\" took 0.029308795928955078 seconds to complete.\nFunction \"centroids_closest\" took 0.029177188873291016 seconds to complete.\nFunction \"centroids_closest\" took 0.0476231575012207 seconds to complete.\nFunction \"centroids_closest\" took 0.033652305603027344 seconds to complete.\nFunction \"centroids_closest\" took 0.029240846633911133 seconds to complete.\nFunction \"centroids_closest\" took 0.029605388641357422 seconds to complete.\nFunction \"centroids_closest\" took 0.029245853424072266 seconds to complete.\nFunction \"centroids_closest\" took 0.029191255569458008 seconds to complete.\nFunction \"centroids_closest\" took 0.029239654541015625 seconds to complete.\nFunction \"centroids_closest\" took 0.050776004791259766 seconds to complete.\nFunction \"centroids_closest\" took 0.03654026985168457 seconds to complete.\nFunction \"centroids_closest\" took 0.0293576717376709 seconds to complete.\nFunction \"centroids_closest\" took 0.029229402542114258 seconds to complete.\nFunction \"centroids_closest\" took 0.029086589813232422 seconds to complete.\nFunction \"centroids_closest\" took 0.029327392578125 seconds to complete.\nFunction \"centroids_closest\" took 0.02977156639099121 seconds to complete.\nFunction \"centroids_closest\" took 0.029189109802246094 seconds to complete.\nFunction \"centroids_closest\" took 0.029127836227416992 seconds to complete.\nFunction \"centroids_closest\" took 0.029135704040527344 seconds to complete.\nFunction \"centroids_closest\" took 0.029587268829345703 seconds to complete.\nFunction \"centroids_closest\" took 0.02935194969177246 seconds to complete.\nFunction \"centroids_closest\" took 0.029132366180419922 seconds to complete.\nFunction \"centroids_closest\" took 0.029030561447143555 seconds to complete.\nFunction \"centroids_closest\" took 0.02899479866027832 seconds to complete.\nFunction \"centroids_closest\" took 0.028960466384887695 seconds to complete.\nFunction \"centroids_closest\" took 0.029056787490844727 seconds to complete.\nFunction \"centroids_closest\" took 0.03739523887634277 seconds to complete.\nFunction \"centroids_closest\" took 0.028387784957885742 seconds to complete.\nFunction \"centroids_closest\" took 0.027936935424804688 seconds to complete.\nFunction \"centroids_closest\" took 0.029012441635131836 seconds to complete.\nFunction \"centroids_closest\" took 0.029189586639404297 seconds to complete.\nFunction \"centroids_closest\" took 0.029074907302856445 seconds to complete.\nFunction \"centroids_closest\" took 0.030371904373168945 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 5.821936130523682 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 6, elapsed-time: 5.822263\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(438): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(451): benchmark()\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 1",
            "label": "Python/1",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-00ee9326-9351-4b1f-893e-177815014551.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Python/1'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 1 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-00ee9326-9351-4b1f-893e-177815014551.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-00ee9326-9351-4b1f-893e-177815014551.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 1 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-00ee9326-9351-4b1f-893e-177815014551.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-00ee9326-9351-4b1f-893e-177815014551.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 1 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-00ee9326-9351-4b1f-893e-177815014551.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-00ee9326-9351-4b1f-893e-177815014551.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "hello\ndiff 153.29817119678003\ndiff 153.29817119678003\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 1, elapsed-time: 0.000310\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 175.65196781258697\ndiff 175.65196781258697\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 1, elapsed-time: 0.000316\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 164.7795936736552\ndiff 164.7795936736552\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 1, elapsed-time: 0.000304\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 2",
            "label": "Python/2",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-ae58ddb2-422a-4d43-a0cc-0bfb3177c7e3.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Python/2'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 2 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-ae58ddb2-422a-4d43-a0cc-0bfb3177c7e3.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-ae58ddb2-422a-4d43-a0cc-0bfb3177c7e3.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 2 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-ae58ddb2-422a-4d43-a0cc-0bfb3177c7e3.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-ae58ddb2-422a-4d43-a0cc-0bfb3177c7e3.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 2 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-ae58ddb2-422a-4d43-a0cc-0bfb3177c7e3.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-ae58ddb2-422a-4d43-a0cc-0bfb3177c7e3.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "hello\ndiff 1343.443594203822\ndiff 1343.443594203822\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 2, elapsed-time: 0.001900\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 1374.741677278013\ndiff 1374.741677278013\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 2, elapsed-time: 0.002019\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 1783.243764587258\ndiff 1783.243764587258\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 2, elapsed-time: 0.001963\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 3",
            "label": "Python/3",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-dc69a515-a0b0-449f-b72f-56ffced3d12b.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Python/3'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 3 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-dc69a515-a0b0-449f-b72f-56ffced3d12b.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-dc69a515-a0b0-449f-b72f-56ffced3d12b.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 3 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-dc69a515-a0b0-449f-b72f-56ffced3d12b.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-dc69a515-a0b0-449f-b72f-56ffced3d12b.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 3 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-dc69a515-a0b0-449f-b72f-56ffced3d12b.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-dc69a515-a0b0-449f-b72f-56ffced3d12b.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "hello\ndiff 16795.470697458688\ndiff 16795.470697458688\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 3, elapsed-time: 0.018018\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 18195.104691759254\ndiff 18195.104691759254\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 3, elapsed-time: 0.018769\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 15978.749579568677\ndiff 15978.749579568677\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 3, elapsed-time: 0.018570\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 4",
            "label": "Python/4",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-b08d921a-ef72-4b54-ba1e-bc7fbd6613eb.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Python/4'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 4 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-b08d921a-ef72-4b54-ba1e-bc7fbd6613eb.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-b08d921a-ef72-4b54-ba1e-bc7fbd6613eb.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 4 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-b08d921a-ef72-4b54-ba1e-bc7fbd6613eb.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-b08d921a-ef72-4b54-ba1e-bc7fbd6613eb.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 4 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-b08d921a-ef72-4b54-ba1e-bc7fbd6613eb.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-b08d921a-ef72-4b54-ba1e-bc7fbd6613eb.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "hello\ndiff 182784.06510960398\ndiff 182784.06510960398\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 4, elapsed-time: 0.194477\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 160301.73285225494\ndiff 160301.73285225494\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 4, elapsed-time: 0.209598\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 127328.36238499347\ndiff 127328.36238499347\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 4, elapsed-time: 0.187703\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 5",
            "label": "Python/5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-995ebfca-c50c-446e-9e39-3e473defce17.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Python/5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-995ebfca-c50c-446e-9e39-3e473defce17.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-995ebfca-c50c-446e-9e39-3e473defce17.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-995ebfca-c50c-446e-9e39-3e473defce17.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-995ebfca-c50c-446e-9e39-3e473defce17.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-995ebfca-c50c-446e-9e39-3e473defce17.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-995ebfca-c50c-446e-9e39-3e473defce17.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "hello\ndiff 1542082.3495101437\ndiff 1542082.3495101437\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 5, elapsed-time: 1.907401\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 1241675.208700582\ndiff 1241675.208700582\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 5, elapsed-time: 1.926619\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 1481988.3790866858\ndiff 1481988.3790866858\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 5, elapsed-time: 1.928864\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 6",
            "label": "Python/6",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-1e60ed99-b1ae-47a3-badd-8a9057613c9d.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Python/6'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 6 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-1e60ed99-b1ae-47a3-badd-8a9057613c9d.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-1e60ed99-b1ae-47a3-badd-8a9057613c9d.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 6 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-1e60ed99-b1ae-47a3-badd-8a9057613c9d.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-1e60ed99-b1ae-47a3-badd-8a9057613c9d.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 6 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-1e60ed99-b1ae-47a3-badd-8a9057613c9d.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-1e60ed99-b1ae-47a3-badd-8a9057613c9d.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "hello\ndiff 15209298.366771404\ndiff 15209298.366771404\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 6, elapsed-time: 19.480087\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 12362371.225987364\ndiff 12362371.225987364\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 6, elapsed-time: 18.860984\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 17297323.99541731\ndiff 17297323.99541731\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 6, elapsed-time: 19.296237\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        }
    ],
    "creation_date_utc": "2019-05-17T16:51:08.440004"
}