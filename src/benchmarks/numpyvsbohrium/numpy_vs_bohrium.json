{
    "cmd_list": [
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 3*5",
            "label": "Bohrium/3*5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-79d07ab0-bc90-436d-aa3a-909c50d012bd.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/3*5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 3*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-79d07ab0-bc90-436d-aa3a-909c50d012bd.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-79d07ab0-bc90-436d-aa3a-909c50d012bd.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 3*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-79d07ab0-bc90-436d-aa3a-909c50d012bd.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-79d07ab0-bc90-436d-aa3a-909c50d012bd.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 3*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-79d07ab0-bc90-436d-aa3a-909c50d012bd.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-79d07ab0-bc90-436d-aa3a-909c50d012bd.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\nConverged after 145 iterations\nFunction \"run\" took 9.524443864822388 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 3*5, elapsed-time: 9.524626\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\nConverged after 145 iterations\nFunction \"run\" took 9.273471355438232 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 3*5, elapsed-time: 9.273626\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\n(300000, 25)\nConverged after 145 iterations\nFunction \"run\" took 9.837154388427734 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 3*5, elapsed-time: 9.837324\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 4*5",
            "label": "Bohrium/4*5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a25443d1-d24c-4e81-926e-6279c36e6d8d.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/4*5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 4*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a25443d1-d24c-4e81-926e-6279c36e6d8d.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a25443d1-d24c-4e81-926e-6279c36e6d8d.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 4*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a25443d1-d24c-4e81-926e-6279c36e6d8d.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a25443d1-d24c-4e81-926e-6279c36e6d8d.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 4*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a25443d1-d24c-4e81-926e-6279c36e6d8d.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a25443d1-d24c-4e81-926e-6279c36e6d8d.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\nConverged after 277 iterations\nFunction \"run\" took 26.843667030334473 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 4*5, elapsed-time: 26.843829\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\nConverged after 277 iterations\nFunction \"run\" took 22.047000646591187 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 4*5, elapsed-time: 22.047161\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\n(400000, 25)\nConverged after 277 iterations\nFunction \"run\" took 26.43392515182495 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 4*5, elapsed-time: 26.434095\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 5*5",
            "label": "Bohrium/5*5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-dafe12c9-159a-4215-a8fd-e705832e0508.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/5*5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 5*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-dafe12c9-159a-4215-a8fd-e705832e0508.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-dafe12c9-159a-4215-a8fd-e705832e0508.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 5*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-dafe12c9-159a-4215-a8fd-e705832e0508.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-dafe12c9-159a-4215-a8fd-e705832e0508.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 5*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-dafe12c9-159a-4215-a8fd-e705832e0508.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-dafe12c9-159a-4215-a8fd-e705832e0508.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\nConverged after 200 iterations\nFunction \"run\" took 20.158860683441162 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 5*5, elapsed-time: 20.159024\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\nConverged after 200 iterations\nFunction \"run\" took 18.35849952697754 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 5*5, elapsed-time: 18.358680\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\n(500000, 25)\nConverged after 200 iterations\nFunction \"run\" took 18.510639667510986 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 5*5, elapsed-time: 18.510798\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 6*5",
            "label": "Bohrium/6*5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-afcd4a82-35c1-45d8-ab15-6058692af890.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/6*5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 6*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-afcd4a82-35c1-45d8-ab15-6058692af890.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-afcd4a82-35c1-45d8-ab15-6058692af890.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 6*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-afcd4a82-35c1-45d8-ab15-6058692af890.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-afcd4a82-35c1-45d8-ab15-6058692af890.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 6*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-afcd4a82-35c1-45d8-ab15-6058692af890.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-afcd4a82-35c1-45d8-ab15-6058692af890.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\nConverged after 254 iterations\nFunction \"run\" took 27.539199113845825 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 6*5, elapsed-time: 27.539374\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\nConverged after 254 iterations\nFunction \"run\" took 27.231115102767944 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 6*5, elapsed-time: 27.231287\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\n(600000, 25)\nConverged after 254 iterations\nFunction \"run\" took 27.926046133041382 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 6*5, elapsed-time: 27.926220\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 7*5",
            "label": "Bohrium/7*5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-f5d21c18-068d-4c7b-a86f-bbaccd07350f.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/7*5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 7*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-f5d21c18-068d-4c7b-a86f-bbaccd07350f.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-f5d21c18-068d-4c7b-a86f-bbaccd07350f.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 7*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-f5d21c18-068d-4c7b-a86f-bbaccd07350f.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-f5d21c18-068d-4c7b-a86f-bbaccd07350f.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 7*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-f5d21c18-068d-4c7b-a86f-bbaccd07350f.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-f5d21c18-068d-4c7b-a86f-bbaccd07350f.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\nConverged after 238 iterations\nFunction \"run\" took 28.849910259246826 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 7*5, elapsed-time: 28.850206\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\nConverged after 238 iterations\nFunction \"run\" took 29.338500022888184 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 7*5, elapsed-time: 29.338664\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\n(700000, 25)\nConverged after 238 iterations\nFunction \"run\" took 28.596922874450684 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 7*5, elapsed-time: 28.597079\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 8*5",
            "label": "Bohrium/8*5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-1d0e966a-5e1e-4886-912e-01a3e81842aa.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/8*5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 8*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-1d0e966a-5e1e-4886-912e-01a3e81842aa.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-1d0e966a-5e1e-4886-912e-01a3e81842aa.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 8*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-1d0e966a-5e1e-4886-912e-01a3e81842aa.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-1d0e966a-5e1e-4886-912e-01a3e81842aa.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 8*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-1d0e966a-5e1e-4886-912e-01a3e81842aa.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-1d0e966a-5e1e-4886-912e-01a3e81842aa.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\nConverged after 256 iterations\nFunction \"run\" took 34.911099672317505 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 8*5, elapsed-time: 34.911278\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\nConverged after 256 iterations\nFunction \"run\" took 35.15510964393616 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 8*5, elapsed-time: 35.155276\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "Userkernels has been loaded\ninit: random\nInitialized 25 number of centroids randomly with userkernel\nDone initializing, starting..\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\n(800000, 25)\nConverged after 256 iterations\nFunction \"run\" took 35.417685985565186 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 8*5, elapsed-time: 35.417856\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 3*5",
            "label": "numpy/3*5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-19929b8c-2bce-423a-ab13-be588d51ddb9.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'numpy/3*5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 3*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-19929b8c-2bce-423a-ab13-be588d51ddb9.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-19929b8c-2bce-423a-ab13-be588d51ddb9.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 3*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-19929b8c-2bce-423a-ab13-be588d51ddb9.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-19929b8c-2bce-423a-ab13-be588d51ddb9.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 3*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-19929b8c-2bce-423a-ab13-be588d51ddb9.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-19929b8c-2bce-423a-ab13-be588d51ddb9.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "224\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 3*5, elapsed-time: 54.484603\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "224\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 3*5, elapsed-time: 55.038625\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "224\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 3*5, elapsed-time: 55.276455\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 4*5",
            "label": "numpy/4*5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-63955b6d-3317-4d85-ad13-fab14d318639.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'numpy/4*5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 4*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-63955b6d-3317-4d85-ad13-fab14d318639.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-63955b6d-3317-4d85-ad13-fab14d318639.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 4*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-63955b6d-3317-4d85-ad13-fab14d318639.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-63955b6d-3317-4d85-ad13-fab14d318639.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 4*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-63955b6d-3317-4d85-ad13-fab14d318639.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-63955b6d-3317-4d85-ad13-fab14d318639.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "212\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 4*5, elapsed-time: 68.978105\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "212\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 4*5, elapsed-time: 68.715372\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "212\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 4*5, elapsed-time: 68.509706\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 5*5",
            "label": "numpy/5*5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-c78af255-f73a-4bfa-9a6d-2f82656c9b4c.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'numpy/5*5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 5*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-c78af255-f73a-4bfa-9a6d-2f82656c9b4c.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-c78af255-f73a-4bfa-9a6d-2f82656c9b4c.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 5*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-c78af255-f73a-4bfa-9a6d-2f82656c9b4c.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-c78af255-f73a-4bfa-9a6d-2f82656c9b4c.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 5*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-c78af255-f73a-4bfa-9a6d-2f82656c9b4c.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-c78af255-f73a-4bfa-9a6d-2f82656c9b4c.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "141\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 5*5, elapsed-time: 57.152960\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "141\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 5*5, elapsed-time: 56.925437\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "141\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 5*5, elapsed-time: 56.820276\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 6*5",
            "label": "numpy/6*5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-45f17992-d928-4198-9858-31272670f154.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'numpy/6*5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 6*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-45f17992-d928-4198-9858-31272670f154.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-45f17992-d928-4198-9858-31272670f154.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 6*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-45f17992-d928-4198-9858-31272670f154.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-45f17992-d928-4198-9858-31272670f154.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 6*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-45f17992-d928-4198-9858-31272670f154.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-45f17992-d928-4198-9858-31272670f154.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "225\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 6*5, elapsed-time: 109.216862\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "225\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 6*5, elapsed-time: 109.884069\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "225\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 6*5, elapsed-time: 109.582652\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 7*5",
            "label": "numpy/7*5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a22e91a4-5322-4991-ac6e-3b1f9b266cbd.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'numpy/7*5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 7*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a22e91a4-5322-4991-ac6e-3b1f9b266cbd.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a22e91a4-5322-4991-ac6e-3b1f9b266cbd.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 7*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a22e91a4-5322-4991-ac6e-3b1f9b266cbd.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a22e91a4-5322-4991-ac6e-3b1f9b266cbd.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 7*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a22e91a4-5322-4991-ac6e-3b1f9b266cbd.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-a22e91a4-5322-4991-ac6e-3b1f9b266cbd.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "248\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 7*5, elapsed-time: 140.866430\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "248\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 7*5, elapsed-time: 139.963820\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "248\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 7*5, elapsed-time: 140.754519\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 8*5",
            "label": "numpy/8*5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-6813291e-7069-49c1-a5fc-bee1fce44a2b.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'numpy/8*5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 8*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-6813291e-7069-49c1-a5fc-bee1fce44a2b.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-6813291e-7069-49c1-a5fc-bee1fce44a2b.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 8*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-6813291e-7069-49c1-a5fc-bee1fce44a2b.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-6813291e-7069-49c1-a5fc-bee1fce44a2b.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/pure-numpy-kmeans.py 8*5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-6813291e-7069-49c1-a5fc-bee1fce44a2b.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/numpyvsbohrium/bh-job-6813291e-7069-49c1-a5fc-bee1fce44a2b.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "164\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 8*5, elapsed-time: 107.770830\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "164\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 8*5, elapsed-time: 108.862194\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "164\n/home/chris/Documents/bachelor/src/pure-numpy-kmeans.py - bohrium: False, size: 8*5, elapsed-time: 107.126778\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        }
    ],
    "creation_date_utc": "2019-05-29T14:37:40.944277"
}