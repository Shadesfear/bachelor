{
    "cmd_list": [
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 3",
            "label": "Bohrium/3",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-e5766231-8131-4808-a7df-13ab7ffcd036.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/3'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 3 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-e5766231-8131-4808-a7df-13ab7ffcd036.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-e5766231-8131-4808-a7df-13ab7ffcd036.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 3 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-e5766231-8131-4808-a7df-13ab7ffcd036.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-e5766231-8131-4808-a7df-13ab7ffcd036.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 3 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-e5766231-8131-4808-a7df-13ab7ffcd036.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-e5766231-8131-4808-a7df-13ab7ffcd036.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "100.0\ninit: random\nFunction \"centroids_closest\" took 0.005465984344482422 seconds to complete.\nFunction \"centroids_closest\" took 0.002640247344970703 seconds to complete.\nFunction \"centroids_closest\" took 0.0025398731231689453 seconds to complete.\nFunction \"centroids_closest\" took 0.002630949020385742 seconds to complete.\nFunction \"centroids_closest\" took 0.002620220184326172 seconds to complete.\nFunction \"centroids_closest\" took 0.0025835037231445312 seconds to complete.\nFunction \"centroids_closest\" took 0.002545595169067383 seconds to complete.\nFunction \"centroids_closest\" took 0.002624988555908203 seconds to complete.\nFunction \"centroids_closest\" took 0.002523183822631836 seconds to complete.\nFunction \"centroids_closest\" took 0.0025184154510498047 seconds to complete.\nFunction \"centroids_closest\" took 0.002553224563598633 seconds to complete.\nFunction \"centroids_closest\" took 0.002535104751586914 seconds to complete.\nFunction \"centroids_closest\" took 0.0025320053100585938 seconds to complete.\nFunction \"centroids_closest\" took 0.002632617950439453 seconds to complete.\nFunction \"centroids_closest\" took 0.0025413036346435547 seconds to complete.\nFunction \"centroids_closest\" took 0.0025892257690429688 seconds to complete.\nFunction \"centroids_closest\" took 0.0025339126586914062 seconds to complete.\nFunction \"centroids_closest\" took 0.002523183822631836 seconds to complete.\nFunction \"centroids_closest\" took 0.002603769302368164 seconds to complete.\nFunction \"centroids_closest\" took 0.0029523372650146484 seconds to complete.\nFunction \"centroids_closest\" took 0.0025844573974609375 seconds to complete.\nFunction \"centroids_closest\" took 0.0029549598693847656 seconds to complete.\nFunction \"centroids_closest\" took 0.002655029296875 seconds to complete.\nFunction \"centroids_closest\" took 0.0026161670684814453 seconds to complete.\nFunction \"centroids_closest\" took 0.0025255680084228516 seconds to complete.\nFunction \"centroids_closest\" took 0.002576589584350586 seconds to complete.\nFunction \"centroids_closest\" took 0.0025262832641601562 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.3451704978942871 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 3, elapsed-time: 0.347792\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "100.0\ninit: random\nFunction \"centroids_closest\" took 0.004731416702270508 seconds to complete.\nFunction \"centroids_closest\" took 0.002546548843383789 seconds to complete.\nFunction \"centroids_closest\" took 0.002518177032470703 seconds to complete.\nFunction \"centroids_closest\" took 0.0025205612182617188 seconds to complete.\nFunction \"centroids_closest\" took 0.0025086402893066406 seconds to complete.\nFunction \"centroids_closest\" took 0.0025374889373779297 seconds to complete.\nFunction \"centroids_closest\" took 0.002544879913330078 seconds to complete.\nFunction \"centroids_closest\" took 0.0025076866149902344 seconds to complete.\nFunction \"centroids_closest\" took 0.0025098323822021484 seconds to complete.\nFunction \"centroids_closest\" took 0.0027523040771484375 seconds to complete.\nFunction \"centroids_closest\" took 0.0025625228881835938 seconds to complete.\nFunction \"centroids_closest\" took 0.002590179443359375 seconds to complete.\nFunction \"centroids_closest\" took 0.0025200843811035156 seconds to complete.\nFunction \"centroids_closest\" took 0.002516031265258789 seconds to complete.\nFunction \"centroids_closest\" took 0.002513408660888672 seconds to complete.\nFunction \"centroids_closest\" took 0.0025169849395751953 seconds to complete.\nFunction \"centroids_closest\" took 0.0025281906127929688 seconds to complete.\nFunction \"centroids_closest\" took 0.0025033950805664062 seconds to complete.\nFunction \"centroids_closest\" took 0.0026967525482177734 seconds to complete.\nFunction \"centroids_closest\" took 0.0025115013122558594 seconds to complete.\nFunction \"centroids_closest\" took 0.002524852752685547 seconds to complete.\nFunction \"centroids_closest\" took 0.00258636474609375 seconds to complete.\nFunction \"centroids_closest\" took 0.002524137496948242 seconds to complete.\nFunction \"centroids_closest\" took 0.019281387329101562 seconds to complete.\nFunction \"centroids_closest\" took 0.002549886703491211 seconds to complete.\nFunction \"centroids_closest\" took 0.0025615692138671875 seconds to complete.\nFunction \"centroids_closest\" took 0.0025391578674316406 seconds to complete.\nFunction \"centroids_closest\" took 0.002518892288208008 seconds to complete.\nFunction \"centroids_closest\" took 0.002517223358154297 seconds to complete.\nFunction \"centroids_closest\" took 0.0027070045471191406 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.3781585693359375 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 3, elapsed-time: 0.378418\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "100.0\ninit: random\nFunction \"centroids_closest\" took 0.004770040512084961 seconds to complete.\nFunction \"centroids_closest\" took 0.0025517940521240234 seconds to complete.\nFunction \"centroids_closest\" took 0.0025169849395751953 seconds to complete.\nFunction \"centroids_closest\" took 0.002515554428100586 seconds to complete.\nFunction \"centroids_closest\" took 0.0025386810302734375 seconds to complete.\nFunction \"centroids_closest\" took 0.002509593963623047 seconds to complete.\nFunction \"centroids_closest\" took 0.0025177001953125 seconds to complete.\nFunction \"centroids_closest\" took 0.002550840377807617 seconds to complete.\nFunction \"centroids_closest\" took 0.0025167465209960938 seconds to complete.\nFunction \"centroids_closest\" took 0.0025634765625 seconds to complete.\nFunction \"centroids_closest\" took 0.002518177032470703 seconds to complete.\nFunction \"centroids_closest\" took 0.0026175975799560547 seconds to complete.\nFunction \"centroids_closest\" took 0.002524137496948242 seconds to complete.\nFunction \"centroids_closest\" took 0.0025234222412109375 seconds to complete.\nFunction \"centroids_closest\" took 0.002522706985473633 seconds to complete.\nFunction \"centroids_closest\" took 0.0025217533111572266 seconds to complete.\nFunction \"centroids_closest\" took 0.002519369125366211 seconds to complete.\nFunction \"centroids_closest\" took 0.0025320053100585938 seconds to complete.\nFunction \"centroids_closest\" took 0.002519845962524414 seconds to complete.\nFunction \"centroids_closest\" took 0.002532482147216797 seconds to complete.\nFunction \"centroids_closest\" took 0.0025255680084228516 seconds to complete.\nFunction \"centroids_closest\" took 0.0025238990783691406 seconds to complete.\nFunction \"centroids_closest\" took 0.002567291259765625 seconds to complete.\nFunction \"centroids_closest\" took 0.002530813217163086 seconds to complete.\nFunction \"centroids_closest\" took 0.0025196075439453125 seconds to complete.\nFunction \"centroids_closest\" took 0.021167278289794922 seconds to complete.\nFunction \"centroids_closest\" took 0.0025615692138671875 seconds to complete.\nFunction \"centroids_closest\" took 0.0025458335876464844 seconds to complete.\nFunction \"centroids_closest\" took 0.002521038055419922 seconds to complete.\nFunction \"centroids_closest\" took 0.0025322437286376953 seconds to complete.\nFunction \"centroids_closest\" took 0.0025267601013183594 seconds to complete.\nFunction \"centroids_closest\" took 0.017626047134399414 seconds to complete.\nFunction \"centroids_closest\" took 0.002555370330810547 seconds to complete.\nFunction \"centroids_closest\" took 0.0025904178619384766 seconds to complete.\nFunction \"centroids_closest\" took 0.00252532958984375 seconds to complete.\nFunction \"centroids_closest\" took 0.002537250518798828 seconds to complete.\nFunction \"centroids_closest\" took 0.0025374889373779297 seconds to complete.\nFunction \"centroids_closest\" took 0.0025305747985839844 seconds to complete.\nFunction \"centroids_closest\" took 0.0025320053100585938 seconds to complete.\nFunction \"centroids_closest\" took 0.0025637149810791016 seconds to complete.\nFunction \"centroids_closest\" took 0.002583026885986328 seconds to complete.\nFunction \"centroids_closest\" took 0.0025522708892822266 seconds to complete.\nFunction \"centroids_closest\" took 0.002595663070678711 seconds to complete.\nFunction \"centroids_closest\" took 0.0025370121002197266 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 0.5655665397644043 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 3, elapsed-time: 0.565820\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 4",
            "label": "Bohrium/4",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-2cc90cca-c515-4509-970e-7459b1464d19.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/4'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 4 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-2cc90cca-c515-4509-970e-7459b1464d19.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-2cc90cca-c515-4509-970e-7459b1464d19.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 4 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-2cc90cca-c515-4509-970e-7459b1464d19.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-2cc90cca-c515-4509-970e-7459b1464d19.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 4 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-2cc90cca-c515-4509-970e-7459b1464d19.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-2cc90cca-c515-4509-970e-7459b1464d19.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "1000.0\ninit: random\nFunction \"centroids_closest\" took 0.3673393726348877 seconds to complete.\nFunction \"centroids_closest\" took 0.005172014236450195 seconds to complete.\nFunction \"centroids_closest\" took 0.004699230194091797 seconds to complete.\nFunction \"centroids_closest\" took 0.004929304122924805 seconds to complete.\nFunction \"centroids_closest\" took 0.004849910736083984 seconds to complete.\nFunction \"centroids_closest\" took 0.00477910041809082 seconds to complete.\nFunction \"centroids_closest\" took 0.004724740982055664 seconds to complete.\nFunction \"centroids_closest\" took 0.004960060119628906 seconds to complete.\nFunction \"centroids_closest\" took 0.004884481430053711 seconds to complete.\nFunction \"centroids_closest\" took 0.004942893981933594 seconds to complete.\nFunction \"centroids_closest\" took 0.005020856857299805 seconds to complete.\nFunction \"centroids_closest\" took 0.005039691925048828 seconds to complete.\nFunction \"centroids_closest\" took 0.005063056945800781 seconds to complete.\nFunction \"centroids_closest\" took 0.005128383636474609 seconds to complete.\nFunction \"centroids_closest\" took 0.004984140396118164 seconds to complete.\nFunction \"centroids_closest\" took 0.00510096549987793 seconds to complete.\nFunction \"centroids_closest\" took 0.005154848098754883 seconds to complete.\nFunction \"centroids_closest\" took 0.005007266998291016 seconds to complete.\nFunction \"centroids_closest\" took 0.004920482635498047 seconds to complete.\nFunction \"centroids_closest\" took 0.004991054534912109 seconds to complete.\nFunction \"centroids_closest\" took 0.0048711299896240234 seconds to complete.\nFunction \"centroids_closest\" took 0.006682872772216797 seconds to complete.\nFunction \"centroids_closest\" took 0.004839181900024414 seconds to complete.\nFunction \"centroids_closest\" took 0.005209207534790039 seconds to complete.\nFunction \"centroids_closest\" took 0.004670143127441406 seconds to complete.\nFunction \"centroids_closest\" took 0.007757425308227539 seconds to complete.\nFunction \"centroids_closest\" took 0.006490230560302734 seconds to complete.\nFunction \"centroids_closest\" took 0.004784822463989258 seconds to complete.\nFunction \"centroids_closest\" took 0.004773855209350586 seconds to complete.\nFunction \"centroids_closest\" took 0.005321502685546875 seconds to complete.\nFunction \"centroids_closest\" took 0.0048885345458984375 seconds to complete.\nFunction \"centroids_closest\" took 0.00484776496887207 seconds to complete.\nFunction \"centroids_closest\" took 0.004851818084716797 seconds to complete.\nFunction \"centroids_closest\" took 0.007532596588134766 seconds to complete.\nFunction \"centroids_closest\" took 0.00525212287902832 seconds to complete.\nFunction \"centroids_closest\" took 0.0056498050689697266 seconds to complete.\nFunction \"centroids_closest\" took 0.0048656463623046875 seconds to complete.\nFunction \"centroids_closest\" took 0.004999399185180664 seconds to complete.\nFunction \"centroids_closest\" took 0.004986286163330078 seconds to complete.\nFunction \"centroids_closest\" took 0.004800081253051758 seconds to complete.\nFunction \"centroids_closest\" took 0.004927873611450195 seconds to complete.\nFunction \"centroids_closest\" took 0.006928443908691406 seconds to complete.\nFunction \"centroids_closest\" took 0.005426883697509766 seconds to complete.\nFunction \"centroids_closest\" took 0.005030155181884766 seconds to complete.\nFunction \"centroids_closest\" took 0.004896640777587891 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 1.522646188735962 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 4, elapsed-time: 1.522943\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "1000.0\ninit: random\nFunction \"centroids_closest\" took 0.0073435306549072266 seconds to complete.\nFunction \"centroids_closest\" took 0.004698991775512695 seconds to complete.\nFunction \"centroids_closest\" took 0.004719734191894531 seconds to complete.\nFunction \"centroids_closest\" took 0.0050203800201416016 seconds to complete.\nFunction \"centroids_closest\" took 0.004824161529541016 seconds to complete.\nFunction \"centroids_closest\" took 0.004775524139404297 seconds to complete.\nFunction \"centroids_closest\" took 0.004819631576538086 seconds to complete.\nFunction \"centroids_closest\" took 0.004742622375488281 seconds to complete.\nFunction \"centroids_closest\" took 0.004868030548095703 seconds to complete.\nFunction \"centroids_closest\" took 0.004928112030029297 seconds to complete.\nFunction \"centroids_closest\" took 0.004824161529541016 seconds to complete.\nFunction \"centroids_closest\" took 0.004805326461791992 seconds to complete.\nFunction \"centroids_closest\" took 0.004844188690185547 seconds to complete.\nFunction \"centroids_closest\" took 0.008287668228149414 seconds to complete.\nFunction \"centroids_closest\" took 0.005071163177490234 seconds to complete.\nFunction \"centroids_closest\" took 0.004819154739379883 seconds to complete.\nFunction \"centroids_closest\" took 0.004858732223510742 seconds to complete.\nFunction \"centroids_closest\" took 0.004773616790771484 seconds to complete.\nFunction \"centroids_closest\" took 0.004901885986328125 seconds to complete.\nFunction \"centroids_closest\" took 0.004883766174316406 seconds to complete.\nFunction \"centroids_closest\" took 0.004886627197265625 seconds to complete.\nFunction \"centroids_closest\" took 0.004848957061767578 seconds to complete.\nFunction \"centroids_closest\" took 0.0047740936279296875 seconds to complete.\nFunction \"centroids_closest\" took 0.004882335662841797 seconds to complete.\nFunction \"centroids_closest\" took 0.004815340042114258 seconds to complete.\nFunction \"centroids_closest\" took 0.004904270172119141 seconds to complete.\nFunction \"centroids_closest\" took 0.004914045333862305 seconds to complete.\nFunction \"centroids_closest\" took 0.004857063293457031 seconds to complete.\nFunction \"centroids_closest\" took 0.004960775375366211 seconds to complete.\nFunction \"centroids_closest\" took 0.00475311279296875 seconds to complete.\nFunction \"centroids_closest\" took 0.004823446273803711 seconds to complete.\nFunction \"centroids_closest\" took 0.004778146743774414 seconds to complete.\nFunction \"centroids_closest\" took 0.0049440860748291016 seconds to complete.\nFunction \"centroids_closest\" took 0.004820585250854492 seconds to complete.\nFunction \"centroids_closest\" took 0.004925727844238281 seconds to complete.\nFunction \"centroids_closest\" took 0.0055959224700927734 seconds to complete.\nFunction \"centroids_closest\" took 0.0052721500396728516 seconds to complete.\nFunction \"centroids_closest\" took 0.004924774169921875 seconds to complete.\nFunction \"centroids_closest\" took 0.0047724246978759766 seconds to complete.\nFunction \"centroids_closest\" took 0.0049130916595458984 seconds to complete.\nFunction \"centroids_closest\" took 0.0048122406005859375 seconds to complete.\nFunction \"centroids_closest\" took 0.004751920700073242 seconds to complete.\nFunction \"centroids_closest\" took 0.0048830509185791016 seconds to complete.\nFunction \"centroids_closest\" took 0.004792690277099609 seconds to complete.\nFunction \"centroids_closest\" took 0.005023956298828125 seconds to complete.\nFunction \"centroids_closest\" took 0.005114316940307617 seconds to complete.\nFunction \"centroids_closest\" took 0.004866838455200195 seconds to complete.\nFunction \"centroids_closest\" took 0.0049130916595458984 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 1.0251784324645996 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 4, elapsed-time: 1.025501\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "1000.0\ninit: random\nFunction \"centroids_closest\" took 0.0073986053466796875 seconds to complete.\nFunction \"centroids_closest\" took 0.004792928695678711 seconds to complete.\nFunction \"centroids_closest\" took 0.004647493362426758 seconds to complete.\nFunction \"centroids_closest\" took 0.004677534103393555 seconds to complete.\nFunction \"centroids_closest\" took 0.004677534103393555 seconds to complete.\nFunction \"centroids_closest\" took 0.004747867584228516 seconds to complete.\nFunction \"centroids_closest\" took 0.0048351287841796875 seconds to complete.\nFunction \"centroids_closest\" took 0.022641897201538086 seconds to complete.\nFunction \"centroids_closest\" took 0.017449140548706055 seconds to complete.\nFunction \"centroids_closest\" took 0.009030580520629883 seconds to complete.\nFunction \"centroids_closest\" took 0.004685640335083008 seconds to complete.\nFunction \"centroids_closest\" took 0.004765748977661133 seconds to complete.\nFunction \"centroids_closest\" took 0.0049724578857421875 seconds to complete.\nFunction \"centroids_closest\" took 0.00498199462890625 seconds to complete.\nFunction \"centroids_closest\" took 0.0050127506256103516 seconds to complete.\nFunction \"centroids_closest\" took 0.00532078742980957 seconds to complete.\nFunction \"centroids_closest\" took 0.004982709884643555 seconds to complete.\nFunction \"centroids_closest\" took 0.005306243896484375 seconds to complete.\nFunction \"centroids_closest\" took 0.0048596858978271484 seconds to complete.\nFunction \"centroids_closest\" took 0.00476837158203125 seconds to complete.\nFunction \"centroids_closest\" took 0.004823446273803711 seconds to complete.\nFunction \"centroids_closest\" took 0.0050199031829833984 seconds to complete.\nFunction \"centroids_closest\" took 0.005012035369873047 seconds to complete.\nFunction \"centroids_closest\" took 0.004798173904418945 seconds to complete.\nFunction \"centroids_closest\" took 0.004824161529541016 seconds to complete.\nFunction \"centroids_closest\" took 0.004861116409301758 seconds to complete.\nFunction \"centroids_closest\" took 0.00509333610534668 seconds to complete.\nFunction \"centroids_closest\" took 0.00529932975769043 seconds to complete.\nFunction \"centroids_closest\" took 0.005009651184082031 seconds to complete.\nFunction \"centroids_closest\" took 0.004853725433349609 seconds to complete.\nFunction \"centroids_closest\" took 0.0049076080322265625 seconds to complete.\nFunction \"centroids_closest\" took 0.004769086837768555 seconds to complete.\nFunction \"centroids_closest\" took 0.004748106002807617 seconds to complete.\nFunction \"centroids_closest\" took 0.006041049957275391 seconds to complete.\nFunction \"centroids_closest\" took 0.0051424503326416016 seconds to complete.\nFunction \"centroids_closest\" took 0.004839420318603516 seconds to complete.\nFunction \"centroids_closest\" took 0.00488591194152832 seconds to complete.\nFunction \"centroids_closest\" took 0.005037784576416016 seconds to complete.\nFunction \"centroids_closest\" took 0.004790782928466797 seconds to complete.\nFunction \"centroids_closest\" took 0.0048656463623046875 seconds to complete.\nFunction \"centroids_closest\" took 0.004822492599487305 seconds to complete.\nFunction \"centroids_closest\" took 0.0049054622650146484 seconds to complete.\nFunction \"centroids_closest\" took 0.004867076873779297 seconds to complete.\nFunction \"centroids_closest\" took 0.004879474639892578 seconds to complete.\nFunction \"centroids_closest\" took 0.005359172821044922 seconds to complete.\nFunction \"centroids_closest\" took 0.004793405532836914 seconds to complete.\nFunction \"centroids_closest\" took 0.004723787307739258 seconds to complete.\nFunction \"centroids_closest\" took 0.0048065185546875 seconds to complete.\nFunction \"centroids_closest\" took 0.004701852798461914 seconds to complete.\nFunction \"centroids_closest\" took 0.005112171173095703 seconds to complete.\nFunction \"centroids_closest\" took 0.004827737808227539 seconds to complete.\nFunction \"centroids_closest\" took 0.005083322525024414 seconds to complete.\nFunction \"centroids_closest\" took 0.004897594451904297 seconds to complete.\nFunction \"centroids_closest\" took 0.0047757625579833984 seconds to complete.\nFunction \"centroids_closest\" took 0.00496673583984375 seconds to complete.\nFunction \"centroids_closest\" took 0.005858659744262695 seconds to complete.\nFunction \"centroids_closest\" took 0.005010366439819336 seconds to complete.\nFunction \"centroids_closest\" took 0.004861593246459961 seconds to complete.\nFunction \"centroids_closest\" took 0.004877328872680664 seconds to complete.\nFunction \"centroids_closest\" took 0.004854440689086914 seconds to complete.\nFunction \"centroids_closest\" took 0.004832744598388672 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 1.2056891918182373 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 4, elapsed-time: 1.205954\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 5",
            "label": "Bohrium/5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-9a57dc35-8960-48a8-aaed-2924af26f877.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-9a57dc35-8960-48a8-aaed-2924af26f877.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-9a57dc35-8960-48a8-aaed-2924af26f877.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-9a57dc35-8960-48a8-aaed-2924af26f877.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-9a57dc35-8960-48a8-aaed-2924af26f877.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-9a57dc35-8960-48a8-aaed-2924af26f877.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-9a57dc35-8960-48a8-aaed-2924af26f877.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "10000.0\ninit: random\nFunction \"centroids_closest\" took 0.405242919921875 seconds to complete.\nFunction \"centroids_closest\" took 0.3288688659667969 seconds to complete.\nFunction \"centroids_closest\" took 0.3273746967315674 seconds to complete.\nFunction \"centroids_closest\" took 0.3256678581237793 seconds to complete.\nFunction \"centroids_closest\" took 0.32608938217163086 seconds to complete.\nFunction \"centroids_closest\" took 0.35959839820861816 seconds to complete.\nFunction \"centroids_closest\" took 0.3348245620727539 seconds to complete.\nFunction \"centroids_closest\" took 0.3456897735595703 seconds to complete.\nFunction \"centroids_closest\" took 0.34165048599243164 seconds to complete.\nFunction \"centroids_closest\" took 0.33106040954589844 seconds to complete.\nFunction \"centroids_closest\" took 0.34197545051574707 seconds to complete.\nFunction \"centroids_closest\" took 0.3540070056915283 seconds to complete.\nFunction \"centroids_closest\" took 0.3302037715911865 seconds to complete.\nFunction \"centroids_closest\" took 0.3315556049346924 seconds to complete.\nFunction \"centroids_closest\" took 0.34152674674987793 seconds to complete.\nFunction \"centroids_closest\" took 0.3191382884979248 seconds to complete.\nFunction \"centroids_closest\" took 0.34879493713378906 seconds to complete.\nFunction \"centroids_closest\" took 0.3307921886444092 seconds to complete.\nFunction \"centroids_closest\" took 0.33437323570251465 seconds to complete.\nFunction \"centroids_closest\" took 0.3261575698852539 seconds to complete.\nFunction \"centroids_closest\" took 0.3387312889099121 seconds to complete.\nFunction \"centroids_closest\" took 0.36678147315979004 seconds to complete.\nFunction \"centroids_closest\" took 0.33791351318359375 seconds to complete.\nFunction \"centroids_closest\" took 0.31633877754211426 seconds to complete.\nFunction \"centroids_closest\" took 0.3458709716796875 seconds to complete.\nFunction \"centroids_closest\" took 0.3449118137359619 seconds to complete.\nFunction \"centroids_closest\" took 0.34262776374816895 seconds to complete.\nFunction \"centroids_closest\" took 0.3414618968963623 seconds to complete.\nFunction \"centroids_closest\" took 0.3302621841430664 seconds to complete.\nFunction \"centroids_closest\" took 0.3733024597167969 seconds to complete.\nFunction \"centroids_closest\" took 0.3559243679046631 seconds to complete.\nFunction \"centroids_closest\" took 0.34318065643310547 seconds to complete.\nFunction \"centroids_closest\" took 0.34829092025756836 seconds to complete.\nFunction \"centroids_closest\" took 0.3977651596069336 seconds to complete.\nFunction \"centroids_closest\" took 0.3639109134674072 seconds to complete.\nFunction \"centroids_closest\" took 0.41066765785217285 seconds to complete.\nFunction \"centroids_closest\" took 0.3716244697570801 seconds to complete.\nFunction \"centroids_closest\" took 0.4331984519958496 seconds to complete.\nFunction \"centroids_closest\" took 0.39706921577453613 seconds to complete.\nFunction \"centroids_closest\" took 0.42258572578430176 seconds to complete.\nFunction \"centroids_closest\" took 0.3837590217590332 seconds to complete.\nFunction \"centroids_closest\" took 0.40311694145202637 seconds to complete.\nFunction \"centroids_closest\" took 0.38428425788879395 seconds to complete.\nFunction \"centroids_closest\" took 0.408797025680542 seconds to complete.\nFunction \"centroids_closest\" took 0.3870549201965332 seconds to complete.\nFunction \"centroids_closest\" took 0.412278413772583 seconds to complete.\nFunction \"centroids_closest\" took 0.3903844356536865 seconds to complete.\nFunction \"centroids_closest\" took 0.42003417015075684 seconds to complete.\nFunction \"centroids_closest\" took 0.37386202812194824 seconds to complete.\nFunction \"centroids_closest\" took 0.40750694274902344 seconds to complete.\nFunction \"centroids_closest\" took 0.40132641792297363 seconds to complete.\nFunction \"centroids_closest\" took 0.4084296226501465 seconds to complete.\nFunction \"centroids_closest\" took 0.38465213775634766 seconds to complete.\nFunction \"centroids_closest\" took 0.3792574405670166 seconds to complete.\nFunction \"centroids_closest\" took 0.3872861862182617 seconds to complete.\nFunction \"centroids_closest\" took 0.4076874256134033 seconds to complete.\nFunction \"centroids_closest\" took 0.3991239070892334 seconds to complete.\nFunction \"centroids_closest\" took 0.39501476287841797 seconds to complete.\nFunction \"centroids_closest\" took 0.4006061553955078 seconds to complete.\nFunction \"centroids_closest\" took 0.4234604835510254 seconds to complete.\nFunction \"centroids_closest\" took 0.3905315399169922 seconds to complete.\nFunction \"centroids_closest\" took 0.40993547439575195 seconds to complete.\nFunction \"centroids_closest\" took 0.36597418785095215 seconds to complete.\nFunction \"centroids_closest\" took 0.38751792907714844 seconds to complete.\nFunction \"centroids_closest\" took 0.3861503601074219 seconds to complete.\nFunction \"centroids_closest\" took 0.4071202278137207 seconds to complete.\nFunction \"centroids_closest\" took 0.3809647560119629 seconds to complete.\nFunction \"centroids_closest\" took 0.3965435028076172 seconds to complete.\nFunction \"centroids_closest\" took 0.3778984546661377 seconds to complete.\nFunction \"centroids_closest\" took 0.37721729278564453 seconds to complete.\nFunction \"centroids_closest\" took 0.3619718551635742 seconds to complete.\nFunction \"centroids_closest\" took 0.4028151035308838 seconds to complete.\nFunction \"centroids_closest\" took 0.36867570877075195 seconds to complete.\nFunction \"centroids_closest\" took 0.39084506034851074 seconds to complete.\nFunction \"centroids_closest\" took 0.3940603733062744 seconds to complete.\nFunction \"centroids_closest\" took 0.40216636657714844 seconds to complete.\nFunction \"centroids_closest\" took 0.38024020195007324 seconds to complete.\nFunction \"centroids_closest\" took 0.38298654556274414 seconds to complete.\nFunction \"centroids_closest\" took 0.385296106338501 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 39.13772511482239 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 5, elapsed-time: 39.138069\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "10000.0\ninit: random\nFunction \"centroids_closest\" took 0.4499490261077881 seconds to complete.\nFunction \"centroids_closest\" took 0.4081406593322754 seconds to complete.\nFunction \"centroids_closest\" took 0.3667480945587158 seconds to complete.\nFunction \"centroids_closest\" took 0.3740849494934082 seconds to complete.\nFunction \"centroids_closest\" took 0.38344359397888184 seconds to complete.\nFunction \"centroids_closest\" took 0.38874077796936035 seconds to complete.\nFunction \"centroids_closest\" took 0.42042088508605957 seconds to complete.\nFunction \"centroids_closest\" took 0.3972024917602539 seconds to complete.\nFunction \"centroids_closest\" took 0.4150850772857666 seconds to complete.\nFunction \"centroids_closest\" took 0.42089152336120605 seconds to complete.\nFunction \"centroids_closest\" took 0.40124034881591797 seconds to complete.\nFunction \"centroids_closest\" took 0.40085387229919434 seconds to complete.\nFunction \"centroids_closest\" took 0.41022157669067383 seconds to complete.\nFunction \"centroids_closest\" took 0.3897674083709717 seconds to complete.\nFunction \"centroids_closest\" took 0.4010634422302246 seconds to complete.\nFunction \"centroids_closest\" took 0.3924992084503174 seconds to complete.\nFunction \"centroids_closest\" took 0.4237370491027832 seconds to complete.\nFunction \"centroids_closest\" took 0.39292359352111816 seconds to complete.\nFunction \"centroids_closest\" took 0.41109395027160645 seconds to complete.\nFunction \"centroids_closest\" took 0.3902919292449951 seconds to complete.\nFunction \"centroids_closest\" took 0.4136073589324951 seconds to complete.\nFunction \"centroids_closest\" took 0.40900182723999023 seconds to complete.\nFunction \"centroids_closest\" took 0.41768407821655273 seconds to complete.\nFunction \"centroids_closest\" took 0.3866844177246094 seconds to complete.\nFunction \"centroids_closest\" took 0.4201693534851074 seconds to complete.\nFunction \"centroids_closest\" took 0.39601659774780273 seconds to complete.\nFunction \"centroids_closest\" took 0.4140300750732422 seconds to complete.\nFunction \"centroids_closest\" took 0.4073963165283203 seconds to complete.\nFunction \"centroids_closest\" took 0.4105076789855957 seconds to complete.\nFunction \"centroids_closest\" took 0.4049570560455322 seconds to complete.\nFunction \"centroids_closest\" took 0.43659496307373047 seconds to complete.\nFunction \"centroids_closest\" took 0.36893582344055176 seconds to complete.\nFunction \"centroids_closest\" took 0.41071224212646484 seconds to complete.\nFunction \"centroids_closest\" took 0.3993642330169678 seconds to complete.\nFunction \"centroids_closest\" took 0.404787540435791 seconds to complete.\nFunction \"centroids_closest\" took 0.392697811126709 seconds to complete.\nFunction \"centroids_closest\" took 0.4185678958892822 seconds to complete.\nFunction \"centroids_closest\" took 0.41029930114746094 seconds to complete.\nFunction \"centroids_closest\" took 0.4111824035644531 seconds to complete.\nFunction \"centroids_closest\" took 0.3930368423461914 seconds to complete.\nFunction \"centroids_closest\" took 0.4284176826477051 seconds to complete.\nFunction \"centroids_closest\" took 0.4133157730102539 seconds to complete.\nFunction \"centroids_closest\" took 0.4285545349121094 seconds to complete.\nFunction \"centroids_closest\" took 0.40227794647216797 seconds to complete.\nFunction \"centroids_closest\" took 0.40740036964416504 seconds to complete.\nFunction \"centroids_closest\" took 0.4014463424682617 seconds to complete.\nFunction \"centroids_closest\" took 0.3923912048339844 seconds to complete.\nFunction \"centroids_closest\" took 0.4023299217224121 seconds to complete.\nFunction \"centroids_closest\" took 0.4023623466491699 seconds to complete.\nFunction \"centroids_closest\" took 0.39688897132873535 seconds to complete.\nFunction \"centroids_closest\" took 0.41936826705932617 seconds to complete.\nFunction \"centroids_closest\" took 0.3953404426574707 seconds to complete.\nFunction \"centroids_closest\" took 0.3958585262298584 seconds to complete.\nFunction \"centroids_closest\" took 0.39567995071411133 seconds to complete.\nFunction \"centroids_closest\" took 0.4105710983276367 seconds to complete.\nFunction \"centroids_closest\" took 0.3931550979614258 seconds to complete.\nFunction \"centroids_closest\" took 0.4103837013244629 seconds to complete.\nFunction \"centroids_closest\" took 0.3987915515899658 seconds to complete.\nFunction \"centroids_closest\" took 0.4114260673522949 seconds to complete.\nFunction \"centroids_closest\" took 0.4106483459472656 seconds to complete.\nFunction \"centroids_closest\" took 0.4106464385986328 seconds to complete.\nFunction \"centroids_closest\" took 0.40545654296875 seconds to complete.\nFunction \"centroids_closest\" took 0.39508938789367676 seconds to complete.\nFunction \"centroids_closest\" took 0.39554619789123535 seconds to complete.\nFunction \"centroids_closest\" took 0.41229891777038574 seconds to complete.\nFunction \"centroids_closest\" took 0.39474010467529297 seconds to complete.\nFunction \"centroids_closest\" took 0.4067375659942627 seconds to complete.\nFunction \"centroids_closest\" took 0.39345884323120117 seconds to complete.\nFunction \"centroids_closest\" took 0.42033934593200684 seconds to complete.\nFunction \"centroids_closest\" took 0.399350643157959 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 38.2913134098053 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 5, elapsed-time: 38.291647\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "10000.0\ninit: random\nFunction \"centroids_closest\" took 0.45296549797058105 seconds to complete.\nFunction \"centroids_closest\" took 0.38193678855895996 seconds to complete.\nFunction \"centroids_closest\" took 0.3946492671966553 seconds to complete.\nFunction \"centroids_closest\" took 0.3642239570617676 seconds to complete.\nFunction \"centroids_closest\" took 0.3932981491088867 seconds to complete.\nFunction \"centroids_closest\" took 0.3890361785888672 seconds to complete.\nFunction \"centroids_closest\" took 0.33844804763793945 seconds to complete.\nFunction \"centroids_closest\" took 0.4000382423400879 seconds to complete.\nFunction \"centroids_closest\" took 0.3417477607727051 seconds to complete.\nFunction \"centroids_closest\" took 0.39289021492004395 seconds to complete.\nFunction \"centroids_closest\" took 0.39081335067749023 seconds to complete.\nFunction \"centroids_closest\" took 0.4028797149658203 seconds to complete.\nFunction \"centroids_closest\" took 0.3802816867828369 seconds to complete.\nFunction \"centroids_closest\" took 0.408275842666626 seconds to complete.\nFunction \"centroids_closest\" took 0.4046320915222168 seconds to complete.\nFunction \"centroids_closest\" took 0.37198567390441895 seconds to complete.\nFunction \"centroids_closest\" took 0.4005849361419678 seconds to complete.\nFunction \"centroids_closest\" took 0.41112470626831055 seconds to complete.\nFunction \"centroids_closest\" took 0.4039335250854492 seconds to complete.\nFunction \"centroids_closest\" took 0.3953433036804199 seconds to complete.\nFunction \"centroids_closest\" took 0.41377782821655273 seconds to complete.\nFunction \"centroids_closest\" took 0.3965189456939697 seconds to complete.\nFunction \"centroids_closest\" took 0.39850544929504395 seconds to complete.\nFunction \"centroids_closest\" took 0.3717467784881592 seconds to complete.\nFunction \"centroids_closest\" took 0.4087231159210205 seconds to complete.\nFunction \"centroids_closest\" took 0.3420393466949463 seconds to complete.\nFunction \"centroids_closest\" took 0.4200878143310547 seconds to complete.\nFunction \"centroids_closest\" took 0.3937366008758545 seconds to complete.\nFunction \"centroids_closest\" took 0.38549113273620605 seconds to complete.\nFunction \"centroids_closest\" took 0.3755764961242676 seconds to complete.\nFunction \"centroids_closest\" took 0.4192047119140625 seconds to complete.\nFunction \"centroids_closest\" took 0.38323187828063965 seconds to complete.\nFunction \"centroids_closest\" took 0.3867526054382324 seconds to complete.\nFunction \"centroids_closest\" took 0.3738524913787842 seconds to complete.\nFunction \"centroids_closest\" took 0.43474793434143066 seconds to complete.\nFunction \"centroids_closest\" took 0.36328577995300293 seconds to complete.\nFunction \"centroids_closest\" took 0.3909578323364258 seconds to complete.\nFunction \"centroids_closest\" took 0.3716909885406494 seconds to complete.\nFunction \"centroids_closest\" took 0.3418235778808594 seconds to complete.\nFunction \"centroids_closest\" took 0.37189745903015137 seconds to complete.\nFunction \"centroids_closest\" took 0.3626999855041504 seconds to complete.\nFunction \"centroids_closest\" took 0.378734827041626 seconds to complete.\nFunction \"centroids_closest\" took 0.40866875648498535 seconds to complete.\nFunction \"centroids_closest\" took 0.38555335998535156 seconds to complete.\nFunction \"centroids_closest\" took 0.3802058696746826 seconds to complete.\nFunction \"centroids_closest\" took 0.3976154327392578 seconds to complete.\nFunction \"centroids_closest\" took 0.4366645812988281 seconds to complete.\nFunction \"centroids_closest\" took 0.37807583808898926 seconds to complete.\nFunction \"centroids_closest\" took 0.4223501682281494 seconds to complete.\nFunction \"centroids_closest\" took 0.38637256622314453 seconds to complete.\nFunction \"centroids_closest\" took 0.3971085548400879 seconds to complete.\nFunction \"centroids_closest\" took 0.4061706066131592 seconds to complete.\nFunction \"centroids_closest\" took 0.4184236526489258 seconds to complete.\nFunction \"centroids_closest\" took 0.3955698013305664 seconds to complete.\nFunction \"centroids_closest\" took 0.416872501373291 seconds to complete.\nFunction \"centroids_closest\" took 0.3696153163909912 seconds to complete.\nFunction \"centroids_closest\" took 0.4164309501647949 seconds to complete.\nFunction \"centroids_closest\" took 0.3781001567840576 seconds to complete.\nFunction \"centroids_closest\" took 0.37821197509765625 seconds to complete.\nFunction \"centroids_closest\" took 0.38576602935791016 seconds to complete.\nFunction \"centroids_closest\" took 0.40813159942626953 seconds to complete.\nFunction \"centroids_closest\" took 0.37993645668029785 seconds to complete.\nFunction \"centroids_closest\" took 0.3952622413635254 seconds to complete.\nFunction \"centroids_closest\" took 0.38971519470214844 seconds to complete.\nFunction \"centroids_closest\" took 0.4090912342071533 seconds to complete.\nFunction \"centroids_closest\" took 0.36602067947387695 seconds to complete.\nFunction \"centroids_closest\" took 0.38131284713745117 seconds to complete.\nFunction \"centroids_closest\" took 0.4034135341644287 seconds to complete.\nFunction \"centroids_closest\" took 0.42348694801330566 seconds to complete.\nFunction \"centroids_closest\" took 0.37850403785705566 seconds to complete.\nFunction \"centroids_closest\" took 0.40325140953063965 seconds to complete.\nFunction \"centroids_closest\" took 0.3815319538116455 seconds to complete.\nFunction \"centroids_closest\" took 0.415452241897583 seconds to complete.\nFunction \"centroids_closest\" took 0.37752246856689453 seconds to complete.\nFunction \"centroids_closest\" took 0.4019052982330322 seconds to complete.\nFunction \"centroids_closest\" took 0.37775230407714844 seconds to complete.\nFunction \"centroids_closest\" took 0.39366888999938965 seconds to complete.\nFunction \"centroids_closest\" took 0.40162086486816406 seconds to complete.\nFunction \"centroids_closest\" took 0.38694214820861816 seconds to complete.\nFunction \"centroids_closest\" took 0.3819923400878906 seconds to complete.\nFunction \"centroids_closest\" took 0.3383145332336426 seconds to complete.\nFunction \"centroids_closest\" took 0.37111926078796387 seconds to complete.\nFunction \"centroids_closest\" took 0.39316630363464355 seconds to complete.\nFunction \"centroids_closest\" took 0.38040590286254883 seconds to complete.\nFunction \"centroids_closest\" took 0.397235631942749 seconds to complete.\nFunction \"centroids_closest\" took 0.32732462882995605 seconds to complete.\nOLD CENTERS\nFunction \"run\" took 46.022385358810425 seconds to complete.\n/home/chris/Documents/bachelor/src/bohrium_kmeans.py - bohrium: True, size: 5, elapsed-time: 46.022722\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\nEncountering an operation not supported by Bohrium. It will be handled by the original NumPy:\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(366): points = bh.float64(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(18): result = func(*args, **kwargs)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(440): kmeans.run(points)\n  /home/chris/Documents/bachelor/src/bohrium_kmeans.py(453): benchmark()\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 6",
            "label": "Bohrium/6",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-1b98e731-77a0-46a0-9414-923fea37123e.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/6'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 6 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-1b98e731-77a0-46a0-9414-923fea37123e.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-1b98e731-77a0-46a0-9414-923fea37123e.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 6 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-1b98e731-77a0-46a0-9414-923fea37123e.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-1b98e731-77a0-46a0-9414-923fea37123e.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 6 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-1b98e731-77a0-46a0-9414-923fea37123e.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-1b98e731-77a0-46a0-9414-923fea37123e.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "",
                            "stderr": "terminate called after throwing an instance of 'std::runtime_error'\n  what():  main_mem_malloc() could not allocate a data region. Returned error code: Cannot allocate memory\n"
                        },
                        {
                            "success": true,
                            "stdout": "",
                            "stderr": "terminate called after throwing an instance of 'std::runtime_error'\n  what():  main_mem_malloc() could not allocate a data region. Returned error code: Cannot allocate memory\n"
                        },
                        {
                            "success": true,
                            "stdout": "",
                            "stderr": "terminate called after throwing an instance of 'std::runtime_error'\n  what():  main_mem_malloc() could not allocate a data region. Returned error code: Cannot allocate memory\n"
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/bohrium_kmeans.py 7",
            "label": "Bohrium/7",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-44236b00-798b-4603-9f58-ba8fbd8fa335.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Bohrium/7'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 7 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-44236b00-798b-4603-9f58-ba8fbd8fa335.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-44236b00-798b-4603-9f58-ba8fbd8fa335.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 7 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-44236b00-798b-4603-9f58-ba8fbd8fa335.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-44236b00-798b-4603-9f58-ba8fbd8fa335.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/bohrium_kmeans.py 7 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-44236b00-798b-4603-9f58-ba8fbd8fa335.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-44236b00-798b-4603-9f58-ba8fbd8fa335.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "",
                            "stderr": "terminate called after throwing an instance of 'std::runtime_error'\n  what():  main_mem_malloc() could not allocate a data region. Returned error code: Cannot allocate memory\n"
                        },
                        {
                            "success": true,
                            "stdout": "",
                            "stderr": "terminate called after throwing an instance of 'std::runtime_error'\n  what():  main_mem_malloc() could not allocate a data region. Returned error code: Cannot allocate memory\n"
                        },
                        {
                            "success": true,
                            "stdout": "",
                            "stderr": "terminate called after throwing an instance of 'std::runtime_error'\n  what():  main_mem_malloc() could not allocate a data region. Returned error code: Cannot allocate memory\n"
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 3",
            "label": "Python/3",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-9b2ae72b-74b9-4cfe-9738-56358dce1c71.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Python/3'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 3 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-9b2ae72b-74b9-4cfe-9738-56358dce1c71.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-9b2ae72b-74b9-4cfe-9738-56358dce1c71.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 3 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-9b2ae72b-74b9-4cfe-9738-56358dce1c71.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-9b2ae72b-74b9-4cfe-9738-56358dce1c71.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 3 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-9b2ae72b-74b9-4cfe-9738-56358dce1c71.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-9b2ae72b-74b9-4cfe-9738-56358dce1c71.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "hello\ndiff 14312.23837914232\ndiff 14312.23837914232\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 3, elapsed-time: 0.018603\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 17921.13506633137\ndiff 17921.13506633137\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 3, elapsed-time: 0.018619\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 18437.519404450908\ndiff 18437.519404450908\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 3, elapsed-time: 0.018856\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 4",
            "label": "Python/4",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-32a136f3-9c6a-406a-b8d6-3170cf947508.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Python/4'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 4 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-32a136f3-9c6a-406a-b8d6-3170cf947508.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-32a136f3-9c6a-406a-b8d6-3170cf947508.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 4 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-32a136f3-9c6a-406a-b8d6-3170cf947508.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-32a136f3-9c6a-406a-b8d6-3170cf947508.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 4 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-32a136f3-9c6a-406a-b8d6-3170cf947508.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-32a136f3-9c6a-406a-b8d6-3170cf947508.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "hello\ndiff 1564018.506796905\ndiff 1564018.506796905\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 4, elapsed-time: 1.727363\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 1519973.7804702916\ndiff 1519973.7804702916\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 4, elapsed-time: 1.688831\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 1516427.4407605163\ndiff 1516427.4407605163\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 4, elapsed-time: 1.697004\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 5",
            "label": "Python/5",
            "env": {},
            "jobs": [
                {
                    "status": "finished",
                    "filename": "/home/chris/Documents/bachelor/src/benchmarks/bh-job-b5161b8b-f1cd-4f63-8b6a-1de70d8ff48c.sh",
                    "nruns": 3,
                    "script": "#!/bin/bash\n\n#SBATCH -J 'Python/5'\n#SBATCH -o /tmp/bh-slurm-%%j.out\n#SBATCH -e /tmp/bh-slurm-%%j.err\n#SBATCH --nice=0\n\n\n# The runs \npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-b5161b8b-f1cd-4f63-8b6a-1de70d8ff48c.sh-0.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-b5161b8b-f1cd-4f63-8b6a-1de70d8ff48c.sh-0.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-b5161b8b-f1cd-4f63-8b6a-1de70d8ff48c.sh-1.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-b5161b8b-f1cd-4f63-8b6a-1de70d8ff48c.sh-1.err >&2)\nsync\npython /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 5 > >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-b5161b8b-f1cd-4f63-8b6a-1de70d8ff48c.sh-2.out) 2> >(tee /home/chris/Documents/bachelor/src/benchmarks/bh-job-b5161b8b-f1cd-4f63-8b6a-1de70d8ff48c.sh-2.err >&2)\nsync\n",
                    "warmup": false,
                    "results": [
                        {
                            "success": true,
                            "stdout": "hello\ndiff 156175227.68108281\ndiff 156175227.68108281\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 5, elapsed-time: 181.337483\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 150197196.74703014\ndiff 150197196.74703014\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 5, elapsed-time: 180.191489\n",
                            "stderr": ""
                        },
                        {
                            "success": true,
                            "stdout": "hello\ndiff 156218310.1917337\ndiff 156218310.1917337\n/home/chris/Documents/bachelor/src/legacy/myownkmeans.py - bohrium: False, size: 5, elapsed-time: 177.511919\n",
                            "stderr": ""
                        }
                    ]
                }
            ]
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 6",
            "label": "Python/6",
            "env": {}
        },
        {
            "cmd": "python /home/chris/Documents/bachelor/src/legacy/myownkmeans.py 7",
            "label": "Python/7",
            "env": {}
        }
    ],
    "creation_date_utc": "2019-05-17T17:12:55.189662"
}